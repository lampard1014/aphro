syntax = "proto3";

import "google/api/annotations.proto";
import "github.com/golang/protobuf/ptypes/wrappers/wrappers.proto";
import "github.com/lampard1014/aphro/CommonBiz/Response/PB/response.proto";
package Aphro.Room.pb;

service RoomService {

		//绑定二维码终端信息
		rpc terminalBind(RSTerminalBindRequest) returns (Aphro.CommonBiz.Response) {
			option (google.api.http) = {
				post: "/room/terminal/bind"
				body:"*"
			};
		}
	
		//解绑二维码终端信息
		rpc terminalUnbind(RSTerminalUnbindRequest) returns (Aphro.CommonBiz.Response) {
			option (google.api.http) = {
				post: "/room/terminal/unbind"
				body:"*"
			};
		}

		//直接创建房间 同时绑定二维码
		rpc createRoom(RSCreateRequest) returns (Aphro.CommonBiz.Response) {
			option (google.api.http) = {
				post: "/room/create"
				body:"*"
			};
		}

		//更新房间的信息 同时更新计费方式
		rpc updateRoom(RSUpdateRequest) returns (Aphro.CommonBiz.Response) {
			option (google.api.http) = {
				post: "/room/update"
				body:"*"
			};
		}

		//删除房间
		rpc deleteRoom(RSDeleteRequest) returns (Aphro.CommonBiz.Response) {
			option (google.api.http) = {
				put: "/room/delete/{roomID}"
				body:"*"
			};
		}

		//查询房间
		rpc queryRoom(RSQueryRequest) returns (Aphro.CommonBiz.Response) {
			option (google.api.http) = {
				post: "/room/query"
				body:"*"

			};
		}

		//创建计费方式
        	rpc createRoomChargeRule(RCRCreateRequest) returns (Aphro.CommonBiz.Response) {
        		option (google.api.http) = {
        			post: "/room/charge_rule/create"
        			body:"*"
        		};
        	}
        	//批量创建计费方式
        	rpc batchCreateRoomChargeRule(RCRBatchCreateRequest) returns (Aphro.CommonBiz.Response) {
        		option (google.api.http) = {
        			post: "/room/charge_rule/batchCreate"
        			body:"*"
        		};
        	}

        //更新计费方式
        	rpc updateRoomChargeRule(RCRUpdateRequest) returns (Aphro.CommonBiz.Response) {
        		option (google.api.http) = {
        			post: "/room/charge_rule/update"
        			body:"*"
        		};
        	}
        //查询计费方式
        	rpc queryRoomChargeRule(RCRQueryRequest) returns (Aphro.CommonBiz.Response) {
        		option (google.api.http) = {
        			post: "/room/charge_rule/query"
        			body:"*"
        		};
        	}
        //删除计费方式
        	rpc deleteRoomChargeRule(RCRDeleteRequest) returns (Aphro.CommonBiz.Response) {
        		option (google.api.http) = {
        			post: "/room/charge_rule/delete"
        			body:"*"
        		};
        	}


            //开始一个房间的事务
        	rpc roomTransactionBegin(RSTransactionBeginRequest) returns (Aphro.CommonBiz.Response) {
                option (google.api.http) = {
                    post: "/room/transaction/begin"
                    body:"*"
                 };
            }

            //挂起一个房间的事务
        	rpc roomTransactionSuspend(RSTransactionSuspendRequest) returns (Aphro.CommonBiz.Response) {
                option (google.api.http) = {
                    post: "/room/transaction/suspend"
                    body:"*"
                 };
            }

            //结束一个房间的事务
        	rpc roomTransactionEnd(RSTransactionEndRequest) returns (Aphro.CommonBiz.Response) {
                option (google.api.http) = {
                    post: "/room/transaction/end"
                    body:"*"
                 };
            }

            //创建一个房间的房费
        	rpc roomTransactionCreateRoomFee(RSTransactionCreateRoomFeeRequest) returns (Aphro.CommonBiz.Response) {
                option (google.api.http) = {
                    post: "/room/transaction/createRoomFee"
                    body:"*"
                 };
            }

            //查询一个房间的房费
         	rpc roomTransactionQueryRoomFee(RSTransactionQueryRoomFeeRequest) returns (Aphro.CommonBiz.Response) {
                 option (google.api.http) = {
                     post: "/room/transaction/queryRoomFee"
                     body:"*"
                  };
             }

            //更新一个房间的房费信息
 //        	rpc roomTransactionUpdateRoomFee(RSTransactionUpdateRoomFeeRequest) returns (Aphro.CommonBiz.Response) {
 //                option (google.api.http) = {
  //                   post: "/room/transaction/createRoomFee"
    //                 body:"*"
      //            };
        //     }

}

message RSDeleteRequest {
	uint32 roomID = 1;
	string sessionToken = 2;

}

message RSDeleteResponse {
	bool success = 1;
}

message RSResult {
	uint32 roomID = 1;
	uint32 merchantID =2;
	string terminalCode = 3;
	RSLocation location = 4;
	uint32 status = 5;
	string roomName = 6;
	uint32 flag = 8;
	repeated RCRResult chargeRules = 7;
}

message RSQueryRequest {
	string sessionToken = 1;
	uint32 roomID = 2;
	uint32 merchantID =3;
}
 
message RSQueryResponse {
	bool success = 1;
	repeated RSResult rooms = 2;
}

message RSCreateRequest {
	string terminalCode = 1;
	string sessionToken = 2;
	RSLocation location = 3;
	string roomName = 4;
}


message RSCreateResponse {
	uint32 roomID = 1;
	bool success = 2;
}

message RSUpdateRequest {
	google.protobuf.StringValue sessionToken = 1;
	google.protobuf.UInt32Value roomID = 2;

	google.protobuf.StringValue terminalCode = 3;
	RSLocation location = 4;
	google.protobuf.UInt32Value status = 5;
	google.protobuf.StringValue roomName = 7;

	//repeated RCRCreateRequest chargeRules = 6;
}

message RSUpdateResponse {
	bool success = 2;
}

message RSLocation {
	string longitude = 1;	//经度
	string latitude = 2;	//纬度
}

message RSTerminalBindRequest {
	string sessionToken = 1;
	string terminalCode = 2;
	RSLocation location = 3;
	uint32 roomID = 4;
}

message RSTerminalBindResponse {
	bool success = 1;
}

message RSTerminalUnbindRequest {
	uint32 roomID = 1;
	string sessionToken = 2;
}

message RSTerminalUnbindResponse {
	bool success = 1;
}


//房间计费方式
message RCRResult {
	uint32 merchantID = 1;
	uint32 RCRID = 7;
	float	fee	=	2;
	string	start	=3;
	string	end	=	4;
	uint32 interval = 5;
	uint32 intervalUnit = 6;
	uint32 roomID = 8;
	uint32 flag = 9;
	string name =10;
}

message RCRDeleteRequest {
	uint32 merchantID = 1;
	string sessionToken = 2;
	uint32 RCRID = 7;
	uint32 roomID = 8;
}

message RCRDeleteResponse {
	bool success = 1;
}

message RCRQueryRequest {
	uint32 RCRID = 1;
	string sessionToken = 4;
	uint32 merchantID = 2;
	uint32 roomID = 3;
}

message RCRQueryResponse {
	bool success = 1;
	repeated RCRResult results = 2;
}

message RCRUpdateRequest {
	uint32 merchantID = 1;
	uint32 RCRID = 7;
	string sessionToken = 9;

	float	fee	=	2;
	string	start	=3;
	string	end	=	4;
	uint32 interval = 5;
	uint32 intervalUnit = 6;
	uint32 roomID = 8;
	string name = 10;

}

message RCRUpdateResponse {
	bool success = 1;
}

message RCRCreateRequest {
    uint32  rcrID = 11;
	string  sessionToken = 1;
	float   fee	= 2;
	string	start = 3;
	string	end	= 4;
	uint32  interval = 5;
	uint32  intervalUnit = 6;
	uint32  merchantID = 7;
	uint32  roomID = 8;
	uint32  flag = 9;
	string  name = 10;
}

message RCRBatchCreateRequest {
	string  sessionToken = 1;
	uint32 merchantID = 2;
    uint32 roomID = 3;
	repeated RCRCreateRequest rules = 4;
}

message RCRBatchCreateResponse {
    bool success = 1;
}

message RCRCreateResponse {
	bool success = 1;
	uint32 recodeID = 2;
}

message RSTransactionBeginRequest {
	string  sessionToken = 1;
	uint32  roomID  =   2;
    repeated  RCRCreateRequest roomChargeRules = 3;
}

message RSTransactionBeginResponse {
    bool success = 1;
    uint32 transactionID = 2;
    uint64 start = 3;
    float fee = 4;
}

message RSTransactionSuspendRequest {
	string  sessionToken = 1;
	uint32  roomID  =   2;
    uint32  transactionID = 3;
   // uint32  merchantID =4;
}

message RSTransactionSuspendResponse {
    bool success = 1;
}

message RSTransactionEndRequest {
	string  sessionToken = 1;
	uint32  roomID  =   2;
    uint32 transactionID = 3;
    uint32  merchantID =4;

}

message RSTransactionEndResponse {
    bool success = 1;
}

message RSTransactionCreateRoomFeeRequest {
	string  sessionToken = 1;
	float   fee	=	2;
	string	start	=3;
	string	end	=	4;
	uint32 interval = 5;
	uint32 intervalUnit = 6;
	uint32 merchantID = 7;
	uint32 roomID = 8;
	uint32 transactionID = 9;
	uint32 flag = 10;
}

message RSTransactionCreateRoomFeeResponse {
    bool success = 1;
}

message RSTransactionQueryRoomFeeRequest {
	string  sessionToken = 1;
	uint32 transactionID = 9;
	uint32  transactionRoomFeeID = 2;
	uint32 roomID = 8;
}

message RSTransactionQueryRoomFeeResponse {
    bool success = 1;
    repeated RSTransactionRoomFeeResult roomFees = 2;
}

message RSTransactionRoomFeeResult {
	uint32  transactionRoomFeeID = 1;
	float   fee	=	2;
	uint32  createTime = 12;
	uint32  endTime = 13;
		float   feePerInterval = 11;
	string	start	=3;
	string	end	=	4;
	uint32 interval = 5;
	uint32 intervalUnit = 6;
	uint32 merchantID = 7;
	uint32 roomID = 8;
	uint32 transactionID = 9;
	uint32 flag = 10;
}