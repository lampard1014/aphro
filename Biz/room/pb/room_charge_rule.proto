syntax = "proto3";

import "google/api/annotations.proto";

package Aphro.RoomChargeRule;

service RoomChargeRuleService {

	//创建计费方式
	rpc create(RCRCreateRequest) returns (RCRCreateResponse) {
		option (google.api.http) = {
			post: "/room/charge_rule/create"
			body:"*"
		};
	}

	rpc update(RCRUpdateRequest) returns (RCRUpdateResponse) {
		option (google.api.http) = {
			post: "/room/charge_rule/update"
			body:"*"
		};
	}

	rpc query(RCRQueryRequest) returns (RCRQueryResponse) {
		option (google.api.http) = {
			post: "/room/charge_rule/query"
			body:"*"
		};
	}

	rpc delete(RCRDeleteRequest) returns (RCRDeleteResponse) {
		option (google.api.http) = {
			post: "/room/charge_rule/delete"
			body:"*"
		};
	}

}

message RCRResult {
	uint32 merchantID = 1;
	uint32 RCRID = 7;
	float	fee	=	2;
	string	start	=3;
	string	end	=	4;
	uint32 interval = 5;
	uint32 intervalUnit = 6;
	uint32 roomID = 8;
	uint32 flag = 9;
}

message RCRDeleteRequest {
	uint32 merchantID = 1;
	uint32 RCRID = 7;
	uint32 roomID = 8;
}

message RCRDeleteResponse {
	bool successed = 1;
}

message RCRQueryRequest {
	uint32 RCRID = 1;
	uint32 merchantID = 2;
	uint32 roomID = 3;
}

message RCRQueryResponse {
	bool successed = 1;
	repeated RCRResult results = 2;
}

message RCRUpdateRequest {
	uint32 merchantID = 1;
	uint32 RCRID = 7;

	float	fee	=	2;
	string	start	=3;
	string	end	=	4;
	uint32 interval = 5;
	uint32 intervalUnit = 6;
	uint32 roomID = 8;

}

message RCRUpdateResponse {
	bool successed = 1;
}

message RCRCreateRequest {
	float	fee	=	2;
	string	start	=3;
	string	end	=	4;
	uint32 interval = 5;
	uint32 intervalUnit = 6;
	uint32 merchantID = 7;
	uint32 roomID = 8;
}

message RCRCreateResponse {
	bool successed = 1;
	uint32 recodeID = 2;
}
