// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

/*
Package Aphro_Order_PB is a generated protocol buffer package.

It is generated from these files:
	order.proto

It has these top-level messages:
	OSQueryOrderRequest
	OSQueryOrderResponse
	OSDeleteOrderRequest
	OSDeleteOrderResponse
	OSUpdateOrderRequest
	OSUpdateOrderResponse
	OSCreateOrderRequest
	OSCreateOrderResponse
	PaymentInfo
	InnerComodityInfo
	RSDeleteResponse
	RSResult
	RSQueryRequest
	RSQueryResponse
	RSCreateRequest
	RSCreateResponse
	RSUpdateRequest
	RSUpdateResponse
	RSLocation
	RSTerminalBindRequest
	RSTerminalBindResponse
	RSTerminalUnbindRequest
	RSTerminalUnbindResponse
	RCRResult
	RCRDeleteRequest
	RCRDeleteResponse
	RCRQueryRequest
	RCRQueryResponse
	RCRUpdateRequest
	RCRUpdateResponse
	RCRCreateRequest
	RCRCreateResponse
*/
package Aphro_Order_PB

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import Aphro_CommonBiz "github.com/lampard1014/aphro/CommonBiz/Response/PB"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EPropersalAccountType int32

const (
	EPropersalAccountType_SYSTEM     EPropersalAccountType = 0
	EPropersalAccountType_C_ENDPOINT EPropersalAccountType = 1
	EPropersalAccountType_B_ENDPOINT EPropersalAccountType = 2
)

var EPropersalAccountType_name = map[int32]string{
	0: "SYSTEM",
	1: "C_ENDPOINT",
	2: "B_ENDPOINT",
}
var EPropersalAccountType_value = map[string]int32{
	"SYSTEM":     0,
	"C_ENDPOINT": 1,
	"B_ENDPOINT": 2,
}

func (x EPropersalAccountType) String() string {
	return proto.EnumName(EPropersalAccountType_name, int32(x))
}
func (EPropersalAccountType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PaymentInfo_E_PaymentType int32

const (
	PaymentInfo_UNKNOW PaymentInfo_E_PaymentType = 0
	PaymentInfo_ALIPAY PaymentInfo_E_PaymentType = 1
	PaymentInfo_WECHAT PaymentInfo_E_PaymentType = 2
	PaymentInfo_CASH   PaymentInfo_E_PaymentType = 3
)

var PaymentInfo_E_PaymentType_name = map[int32]string{
	0: "UNKNOW",
	1: "ALIPAY",
	2: "WECHAT",
	3: "CASH",
}
var PaymentInfo_E_PaymentType_value = map[string]int32{
	"UNKNOW": 0,
	"ALIPAY": 1,
	"WECHAT": 2,
	"CASH":   3,
}

func (x PaymentInfo_E_PaymentType) String() string {
	return proto.EnumName(PaymentInfo_E_PaymentType_name, int32(x))
}
func (PaymentInfo_E_PaymentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

type OSQueryOrderRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	RoomID       uint32 `protobuf:"varint,2,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *OSQueryOrderRequest) Reset()                    { *m = OSQueryOrderRequest{} }
func (m *OSQueryOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*OSQueryOrderRequest) ProtoMessage()               {}
func (*OSQueryOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OSQueryOrderRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *OSQueryOrderRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type OSQueryOrderResponse struct {
	Success bool                                             `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Orders  []*OSQueryOrderResponse_InnerOSQueryOrderRequest `protobuf:"bytes,2,rep,name=orders" json:"orders,omitempty"`
}

func (m *OSQueryOrderResponse) Reset()                    { *m = OSQueryOrderResponse{} }
func (m *OSQueryOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*OSQueryOrderResponse) ProtoMessage()               {}
func (*OSQueryOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OSQueryOrderResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *OSQueryOrderResponse) GetOrders() []*OSQueryOrderResponse_InnerOSQueryOrderRequest {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OSQueryOrderResponse_InnerOSQueryOrderRequest struct {
	TransactionID        uint32                `protobuf:"varint,2,opt,name=transactionID" json:"transactionID,omitempty"`
	RoomID               uint32                `protobuf:"varint,3,opt,name=roomID" json:"roomID,omitempty"`
	OrderNumber          string                `protobuf:"bytes,13,opt,name=order_number,json=orderNumber" json:"order_number,omitempty"`
	OrderID              uint32                `protobuf:"varint,12,opt,name=orderID" json:"orderID,omitempty"`
	Amount               float32               `protobuf:"fixed32,4,opt,name=amount" json:"amount,omitempty"`
	OutterTransactionID  string                `protobuf:"bytes,5,opt,name=outterTransactionID" json:"outterTransactionID,omitempty"`
	UserAgent            string                `protobuf:"bytes,6,opt,name=userAgent" json:"userAgent,omitempty"`
	Comment              string                `protobuf:"bytes,7,opt,name=comment" json:"comment,omitempty"`
	PropersalName        string                `protobuf:"bytes,8,opt,name=propersalName" json:"propersalName,omitempty"`
	PropersalID          uint32                `protobuf:"varint,9,opt,name=propersalID" json:"propersalID,omitempty"`
	PropersalAccountType EPropersalAccountType `protobuf:"varint,10,opt,name=propersalAccountType,enum=Aphro.Order.PB.EPropersalAccountType" json:"propersalAccountType,omitempty"`
	Commodities          []*InnerComodityInfo  `protobuf:"bytes,11,rep,name=commodities" json:"commodities,omitempty"`
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) Reset() {
	*m = OSQueryOrderResponse_InnerOSQueryOrderRequest{}
}
func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) String() string {
	return proto.CompactTextString(m)
}
func (*OSQueryOrderResponse_InnerOSQueryOrderRequest) ProtoMessage() {}
func (*OSQueryOrderResponse_InnerOSQueryOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetTransactionID() uint32 {
	if m != nil {
		return m.TransactionID
	}
	return 0
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetOrderNumber() string {
	if m != nil {
		return m.OrderNumber
	}
	return ""
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetOrderID() uint32 {
	if m != nil {
		return m.OrderID
	}
	return 0
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetOutterTransactionID() string {
	if m != nil {
		return m.OutterTransactionID
	}
	return ""
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetPropersalName() string {
	if m != nil {
		return m.PropersalName
	}
	return ""
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetPropersalID() uint32 {
	if m != nil {
		return m.PropersalID
	}
	return 0
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetPropersalAccountType() EPropersalAccountType {
	if m != nil {
		return m.PropersalAccountType
	}
	return EPropersalAccountType_SYSTEM
}

func (m *OSQueryOrderResponse_InnerOSQueryOrderRequest) GetCommodities() []*InnerComodityInfo {
	if m != nil {
		return m.Commodities
	}
	return nil
}

type OSDeleteOrderRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	OrderNumber  string `protobuf:"bytes,11,opt,name=order_number,json=orderNumber" json:"order_number,omitempty"`
	OrderID      uint32 `protobuf:"varint,12,opt,name=orderID" json:"orderID,omitempty"`
}

func (m *OSDeleteOrderRequest) Reset()                    { *m = OSDeleteOrderRequest{} }
func (m *OSDeleteOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*OSDeleteOrderRequest) ProtoMessage()               {}
func (*OSDeleteOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OSDeleteOrderRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *OSDeleteOrderRequest) GetOrderNumber() string {
	if m != nil {
		return m.OrderNumber
	}
	return ""
}

func (m *OSDeleteOrderRequest) GetOrderID() uint32 {
	if m != nil {
		return m.OrderID
	}
	return 0
}

type OSDeleteOrderResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *OSDeleteOrderResponse) Reset()                    { *m = OSDeleteOrderResponse{} }
func (m *OSDeleteOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*OSDeleteOrderResponse) ProtoMessage()               {}
func (*OSDeleteOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *OSDeleteOrderResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type OSUpdateOrderRequest struct {
	SessionToken         string                `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	TransactionID        uint32                `protobuf:"varint,2,opt,name=transactionID" json:"transactionID,omitempty"`
	RoomID               uint32                `protobuf:"varint,3,opt,name=roomID" json:"roomID,omitempty"`
	OrderNumber          string                `protobuf:"bytes,13,opt,name=order_number,json=orderNumber" json:"order_number,omitempty"`
	OrderID              uint32                `protobuf:"varint,12,opt,name=orderID" json:"orderID,omitempty"`
	Amount               float32               `protobuf:"fixed32,4,opt,name=amount" json:"amount,omitempty"`
	OutterTransactionID  string                `protobuf:"bytes,5,opt,name=outterTransactionID" json:"outterTransactionID,omitempty"`
	UserAgent            string                `protobuf:"bytes,6,opt,name=userAgent" json:"userAgent,omitempty"`
	Comment              string                `protobuf:"bytes,7,opt,name=comment" json:"comment,omitempty"`
	PropersalName        string                `protobuf:"bytes,8,opt,name=propersalName" json:"propersalName,omitempty"`
	PropersalID          uint32                `protobuf:"varint,9,opt,name=propersalID" json:"propersalID,omitempty"`
	PropersalAccountType EPropersalAccountType `protobuf:"varint,10,opt,name=propersalAccountType,enum=Aphro.Order.PB.EPropersalAccountType" json:"propersalAccountType,omitempty"`
	Commodities          []*InnerComodityInfo  `protobuf:"bytes,11,rep,name=commodities" json:"commodities,omitempty"`
}

func (m *OSUpdateOrderRequest) Reset()                    { *m = OSUpdateOrderRequest{} }
func (m *OSUpdateOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*OSUpdateOrderRequest) ProtoMessage()               {}
func (*OSUpdateOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *OSUpdateOrderRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *OSUpdateOrderRequest) GetTransactionID() uint32 {
	if m != nil {
		return m.TransactionID
	}
	return 0
}

func (m *OSUpdateOrderRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *OSUpdateOrderRequest) GetOrderNumber() string {
	if m != nil {
		return m.OrderNumber
	}
	return ""
}

func (m *OSUpdateOrderRequest) GetOrderID() uint32 {
	if m != nil {
		return m.OrderID
	}
	return 0
}

func (m *OSUpdateOrderRequest) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OSUpdateOrderRequest) GetOutterTransactionID() string {
	if m != nil {
		return m.OutterTransactionID
	}
	return ""
}

func (m *OSUpdateOrderRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *OSUpdateOrderRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *OSUpdateOrderRequest) GetPropersalName() string {
	if m != nil {
		return m.PropersalName
	}
	return ""
}

func (m *OSUpdateOrderRequest) GetPropersalID() uint32 {
	if m != nil {
		return m.PropersalID
	}
	return 0
}

func (m *OSUpdateOrderRequest) GetPropersalAccountType() EPropersalAccountType {
	if m != nil {
		return m.PropersalAccountType
	}
	return EPropersalAccountType_SYSTEM
}

func (m *OSUpdateOrderRequest) GetCommodities() []*InnerComodityInfo {
	if m != nil {
		return m.Commodities
	}
	return nil
}

type OSUpdateOrderResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *OSUpdateOrderResponse) Reset()                    { *m = OSUpdateOrderResponse{} }
func (m *OSUpdateOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*OSUpdateOrderResponse) ProtoMessage()               {}
func (*OSUpdateOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OSUpdateOrderResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type OSCreateOrderRequest struct {
	SessionToken         string                `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	TransactionID        uint32                `protobuf:"varint,2,opt,name=transactionID" json:"transactionID,omitempty"`
	RoomID               uint32                `protobuf:"varint,3,opt,name=roomID" json:"roomID,omitempty"`
	Amount               float32               `protobuf:"fixed32,4,opt,name=amount" json:"amount,omitempty"`
	OutterTransactionID  string                `protobuf:"bytes,5,opt,name=outterTransactionID" json:"outterTransactionID,omitempty"`
	UserAgent            string                `protobuf:"bytes,6,opt,name=userAgent" json:"userAgent,omitempty"`
	Comment              string                `protobuf:"bytes,7,opt,name=comment" json:"comment,omitempty"`
	PropersalName        string                `protobuf:"bytes,8,opt,name=propersalName" json:"propersalName,omitempty"`
	PropersalID          uint32                `protobuf:"varint,9,opt,name=propersalID" json:"propersalID,omitempty"`
	PropersalAccountType EPropersalAccountType `protobuf:"varint,10,opt,name=propersalAccountType,enum=Aphro.Order.PB.EPropersalAccountType" json:"propersalAccountType,omitempty"`
	Commodities          []*InnerComodityInfo  `protobuf:"bytes,11,rep,name=commodities" json:"commodities,omitempty"`
}

func (m *OSCreateOrderRequest) Reset()                    { *m = OSCreateOrderRequest{} }
func (m *OSCreateOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*OSCreateOrderRequest) ProtoMessage()               {}
func (*OSCreateOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *OSCreateOrderRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *OSCreateOrderRequest) GetTransactionID() uint32 {
	if m != nil {
		return m.TransactionID
	}
	return 0
}

func (m *OSCreateOrderRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *OSCreateOrderRequest) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OSCreateOrderRequest) GetOutterTransactionID() string {
	if m != nil {
		return m.OutterTransactionID
	}
	return ""
}

func (m *OSCreateOrderRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *OSCreateOrderRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *OSCreateOrderRequest) GetPropersalName() string {
	if m != nil {
		return m.PropersalName
	}
	return ""
}

func (m *OSCreateOrderRequest) GetPropersalID() uint32 {
	if m != nil {
		return m.PropersalID
	}
	return 0
}

func (m *OSCreateOrderRequest) GetPropersalAccountType() EPropersalAccountType {
	if m != nil {
		return m.PropersalAccountType
	}
	return EPropersalAccountType_SYSTEM
}

func (m *OSCreateOrderRequest) GetCommodities() []*InnerComodityInfo {
	if m != nil {
		return m.Commodities
	}
	return nil
}

type OSCreateOrderResponse struct {
	Success     bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	OrderNumber string `protobuf:"bytes,2,opt,name=orderNumber" json:"orderNumber,omitempty"`
}

func (m *OSCreateOrderResponse) Reset()                    { *m = OSCreateOrderResponse{} }
func (m *OSCreateOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*OSCreateOrderResponse) ProtoMessage()               {}
func (*OSCreateOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *OSCreateOrderResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *OSCreateOrderResponse) GetOrderNumber() string {
	if m != nil {
		return m.OrderNumber
	}
	return ""
}

type PaymentInfo struct {
}

func (m *PaymentInfo) Reset()                    { *m = PaymentInfo{} }
func (m *PaymentInfo) String() string            { return proto.CompactTextString(m) }
func (*PaymentInfo) ProtoMessage()               {}
func (*PaymentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type InnerComodityInfo struct {
	Name       string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Price      float32 `protobuf:"fixed32,2,opt,name=price" json:"price,omitempty"`
	MerchantID uint32  `protobuf:"varint,3,opt,name=merchantID" json:"merchantID,omitempty"`
	Id         uint32  `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
}

func (m *InnerComodityInfo) Reset()                    { *m = InnerComodityInfo{} }
func (m *InnerComodityInfo) String() string            { return proto.CompactTextString(m) }
func (*InnerComodityInfo) ProtoMessage()               {}
func (*InnerComodityInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *InnerComodityInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InnerComodityInfo) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *InnerComodityInfo) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *InnerComodityInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RSDeleteResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RSDeleteResponse) Reset()                    { *m = RSDeleteResponse{} }
func (m *RSDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*RSDeleteResponse) ProtoMessage()               {}
func (*RSDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RSDeleteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RSResult struct {
	RoomID       uint32       `protobuf:"varint,1,opt,name=roomID" json:"roomID,omitempty"`
	MerchantID   uint32       `protobuf:"varint,2,opt,name=merchantID" json:"merchantID,omitempty"`
	TerminalCode string       `protobuf:"bytes,3,opt,name=terminalCode" json:"terminalCode,omitempty"`
	Location     *RSLocation  `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	Status       uint32       `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	RoomName     string       `protobuf:"bytes,6,opt,name=roomName" json:"roomName,omitempty"`
	ChargeRules  []*RCRResult `protobuf:"bytes,7,rep,name=chargeRules" json:"chargeRules,omitempty"`
}

func (m *RSResult) Reset()                    { *m = RSResult{} }
func (m *RSResult) String() string            { return proto.CompactTextString(m) }
func (*RSResult) ProtoMessage()               {}
func (*RSResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RSResult) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RSResult) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *RSResult) GetTerminalCode() string {
	if m != nil {
		return m.TerminalCode
	}
	return ""
}

func (m *RSResult) GetLocation() *RSLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *RSResult) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RSResult) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

func (m *RSResult) GetChargeRules() []*RCRResult {
	if m != nil {
		return m.ChargeRules
	}
	return nil
}

type RSQueryRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	RoomID       uint32 `protobuf:"varint,2,opt,name=roomID" json:"roomID,omitempty"`
	MerchantID   uint32 `protobuf:"varint,3,opt,name=merchantID" json:"merchantID,omitempty"`
}

func (m *RSQueryRequest) Reset()                    { *m = RSQueryRequest{} }
func (m *RSQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*RSQueryRequest) ProtoMessage()               {}
func (*RSQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *RSQueryRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *RSQueryRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RSQueryRequest) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

type RSQueryResponse struct {
	Success bool        `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Rooms   []*RSResult `protobuf:"bytes,2,rep,name=rooms" json:"rooms,omitempty"`
}

func (m *RSQueryResponse) Reset()                    { *m = RSQueryResponse{} }
func (m *RSQueryResponse) String() string            { return proto.CompactTextString(m) }
func (*RSQueryResponse) ProtoMessage()               {}
func (*RSQueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RSQueryResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RSQueryResponse) GetRooms() []*RSResult {
	if m != nil {
		return m.Rooms
	}
	return nil
}

type RSCreateRequest struct {
	TerminalCode string      `protobuf:"bytes,1,opt,name=terminalCode" json:"terminalCode,omitempty"`
	SessionToken string      `protobuf:"bytes,2,opt,name=sessionToken" json:"sessionToken,omitempty"`
	Location     *RSLocation `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	RoomName     string      `protobuf:"bytes,4,opt,name=roomName" json:"roomName,omitempty"`
}

func (m *RSCreateRequest) Reset()                    { *m = RSCreateRequest{} }
func (m *RSCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*RSCreateRequest) ProtoMessage()               {}
func (*RSCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RSCreateRequest) GetTerminalCode() string {
	if m != nil {
		return m.TerminalCode
	}
	return ""
}

func (m *RSCreateRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *RSCreateRequest) GetLocation() *RSLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *RSCreateRequest) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

type RSCreateResponse struct {
	RoomID  uint32 `protobuf:"varint,1,opt,name=roomID" json:"roomID,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *RSCreateResponse) Reset()                    { *m = RSCreateResponse{} }
func (m *RSCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*RSCreateResponse) ProtoMessage()               {}
func (*RSCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RSCreateResponse) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RSCreateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RSUpdateRequest struct {
	SessionToken string              `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	RoomID       uint32              `protobuf:"varint,2,opt,name=roomID" json:"roomID,omitempty"`
	TerminalCode string              `protobuf:"bytes,3,opt,name=terminalCode" json:"terminalCode,omitempty"`
	Location     *RSLocation         `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	Status       uint32              `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	RoomName     string              `protobuf:"bytes,7,opt,name=roomName" json:"roomName,omitempty"`
	ChargeRules  []*RCRCreateRequest `protobuf:"bytes,6,rep,name=chargeRules" json:"chargeRules,omitempty"`
}

func (m *RSUpdateRequest) Reset()                    { *m = RSUpdateRequest{} }
func (m *RSUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*RSUpdateRequest) ProtoMessage()               {}
func (*RSUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *RSUpdateRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *RSUpdateRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RSUpdateRequest) GetTerminalCode() string {
	if m != nil {
		return m.TerminalCode
	}
	return ""
}

func (m *RSUpdateRequest) GetLocation() *RSLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *RSUpdateRequest) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RSUpdateRequest) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

func (m *RSUpdateRequest) GetChargeRules() []*RCRCreateRequest {
	if m != nil {
		return m.ChargeRules
	}
	return nil
}

type RSUpdateResponse struct {
	Success bool `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *RSUpdateResponse) Reset()                    { *m = RSUpdateResponse{} }
func (m *RSUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*RSUpdateResponse) ProtoMessage()               {}
func (*RSUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *RSUpdateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RSLocation struct {
	Longitude string `protobuf:"bytes,1,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  string `protobuf:"bytes,2,opt,name=latitude" json:"latitude,omitempty"`
}

func (m *RSLocation) Reset()                    { *m = RSLocation{} }
func (m *RSLocation) String() string            { return proto.CompactTextString(m) }
func (*RSLocation) ProtoMessage()               {}
func (*RSLocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *RSLocation) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *RSLocation) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

type RSTerminalBindRequest struct {
	SessionToken string      `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	TerminalCode string      `protobuf:"bytes,2,opt,name=terminalCode" json:"terminalCode,omitempty"`
	Location     *RSLocation `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	RoomID       uint32      `protobuf:"varint,4,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *RSTerminalBindRequest) Reset()                    { *m = RSTerminalBindRequest{} }
func (m *RSTerminalBindRequest) String() string            { return proto.CompactTextString(m) }
func (*RSTerminalBindRequest) ProtoMessage()               {}
func (*RSTerminalBindRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *RSTerminalBindRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *RSTerminalBindRequest) GetTerminalCode() string {
	if m != nil {
		return m.TerminalCode
	}
	return ""
}

func (m *RSTerminalBindRequest) GetLocation() *RSLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *RSTerminalBindRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type RSTerminalBindResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RSTerminalBindResponse) Reset()                    { *m = RSTerminalBindResponse{} }
func (m *RSTerminalBindResponse) String() string            { return proto.CompactTextString(m) }
func (*RSTerminalBindResponse) ProtoMessage()               {}
func (*RSTerminalBindResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *RSTerminalBindResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RSTerminalUnbindRequest struct {
	RoomID       uint32 `protobuf:"varint,1,opt,name=roomID" json:"roomID,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken" json:"sessionToken,omitempty"`
}

func (m *RSTerminalUnbindRequest) Reset()                    { *m = RSTerminalUnbindRequest{} }
func (m *RSTerminalUnbindRequest) String() string            { return proto.CompactTextString(m) }
func (*RSTerminalUnbindRequest) ProtoMessage()               {}
func (*RSTerminalUnbindRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *RSTerminalUnbindRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RSTerminalUnbindRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type RSTerminalUnbindResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RSTerminalUnbindResponse) Reset()                    { *m = RSTerminalUnbindResponse{} }
func (m *RSTerminalUnbindResponse) String() string            { return proto.CompactTextString(m) }
func (*RSTerminalUnbindResponse) ProtoMessage()               {}
func (*RSTerminalUnbindResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *RSTerminalUnbindResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// 房间计费方式
type RCRResult struct {
	MerchantID   uint32  `protobuf:"varint,1,opt,name=merchantID" json:"merchantID,omitempty"`
	RCRID        uint32  `protobuf:"varint,7,opt,name=RCRID" json:"RCRID,omitempty"`
	Fee          float32 `protobuf:"fixed32,2,opt,name=fee" json:"fee,omitempty"`
	Start        string  `protobuf:"bytes,3,opt,name=start" json:"start,omitempty"`
	End          string  `protobuf:"bytes,4,opt,name=end" json:"end,omitempty"`
	Interval     uint32  `protobuf:"varint,5,opt,name=interval" json:"interval,omitempty"`
	IntervalUnit uint32  `protobuf:"varint,6,opt,name=intervalUnit" json:"intervalUnit,omitempty"`
	RoomID       uint32  `protobuf:"varint,8,opt,name=roomID" json:"roomID,omitempty"`
	Flag         uint32  `protobuf:"varint,9,opt,name=flag" json:"flag,omitempty"`
}

func (m *RCRResult) Reset()                    { *m = RCRResult{} }
func (m *RCRResult) String() string            { return proto.CompactTextString(m) }
func (*RCRResult) ProtoMessage()               {}
func (*RCRResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *RCRResult) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *RCRResult) GetRCRID() uint32 {
	if m != nil {
		return m.RCRID
	}
	return 0
}

func (m *RCRResult) GetFee() float32 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *RCRResult) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *RCRResult) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *RCRResult) GetInterval() uint32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *RCRResult) GetIntervalUnit() uint32 {
	if m != nil {
		return m.IntervalUnit
	}
	return 0
}

func (m *RCRResult) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RCRResult) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

type RCRDeleteRequest struct {
	MerchantID   uint32 `protobuf:"varint,1,opt,name=merchantID" json:"merchantID,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken" json:"sessionToken,omitempty"`
	RCRID        uint32 `protobuf:"varint,7,opt,name=RCRID" json:"RCRID,omitempty"`
	RoomID       uint32 `protobuf:"varint,8,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *RCRDeleteRequest) Reset()                    { *m = RCRDeleteRequest{} }
func (m *RCRDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*RCRDeleteRequest) ProtoMessage()               {}
func (*RCRDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *RCRDeleteRequest) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *RCRDeleteRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *RCRDeleteRequest) GetRCRID() uint32 {
	if m != nil {
		return m.RCRID
	}
	return 0
}

func (m *RCRDeleteRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type RCRDeleteResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RCRDeleteResponse) Reset()                    { *m = RCRDeleteResponse{} }
func (m *RCRDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*RCRDeleteResponse) ProtoMessage()               {}
func (*RCRDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *RCRDeleteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RCRQueryRequest struct {
	RCRID        uint32 `protobuf:"varint,1,opt,name=RCRID" json:"RCRID,omitempty"`
	SessionToken string `protobuf:"bytes,4,opt,name=sessionToken" json:"sessionToken,omitempty"`
	MerchantID   uint32 `protobuf:"varint,2,opt,name=merchantID" json:"merchantID,omitempty"`
	RoomID       uint32 `protobuf:"varint,3,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *RCRQueryRequest) Reset()                    { *m = RCRQueryRequest{} }
func (m *RCRQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*RCRQueryRequest) ProtoMessage()               {}
func (*RCRQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *RCRQueryRequest) GetRCRID() uint32 {
	if m != nil {
		return m.RCRID
	}
	return 0
}

func (m *RCRQueryRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *RCRQueryRequest) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *RCRQueryRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type RCRQueryResponse struct {
	Success bool         `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Results []*RCRResult `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *RCRQueryResponse) Reset()                    { *m = RCRQueryResponse{} }
func (m *RCRQueryResponse) String() string            { return proto.CompactTextString(m) }
func (*RCRQueryResponse) ProtoMessage()               {}
func (*RCRQueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *RCRQueryResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RCRQueryResponse) GetResults() []*RCRResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type RCRUpdateRequest struct {
	MerchantID   uint32  `protobuf:"varint,1,opt,name=merchantID" json:"merchantID,omitempty"`
	RCRID        uint32  `protobuf:"varint,7,opt,name=RCRID" json:"RCRID,omitempty"`
	SessionToken string  `protobuf:"bytes,9,opt,name=sessionToken" json:"sessionToken,omitempty"`
	Fee          float32 `protobuf:"fixed32,2,opt,name=fee" json:"fee,omitempty"`
	Start        string  `protobuf:"bytes,3,opt,name=start" json:"start,omitempty"`
	End          string  `protobuf:"bytes,4,opt,name=end" json:"end,omitempty"`
	Interval     uint32  `protobuf:"varint,5,opt,name=interval" json:"interval,omitempty"`
	IntervalUnit uint32  `protobuf:"varint,6,opt,name=intervalUnit" json:"intervalUnit,omitempty"`
	RoomID       uint32  `protobuf:"varint,8,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *RCRUpdateRequest) Reset()                    { *m = RCRUpdateRequest{} }
func (m *RCRUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*RCRUpdateRequest) ProtoMessage()               {}
func (*RCRUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *RCRUpdateRequest) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *RCRUpdateRequest) GetRCRID() uint32 {
	if m != nil {
		return m.RCRID
	}
	return 0
}

func (m *RCRUpdateRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *RCRUpdateRequest) GetFee() float32 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *RCRUpdateRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *RCRUpdateRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *RCRUpdateRequest) GetInterval() uint32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *RCRUpdateRequest) GetIntervalUnit() uint32 {
	if m != nil {
		return m.IntervalUnit
	}
	return 0
}

func (m *RCRUpdateRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type RCRUpdateResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RCRUpdateResponse) Reset()                    { *m = RCRUpdateResponse{} }
func (m *RCRUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*RCRUpdateResponse) ProtoMessage()               {}
func (*RCRUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *RCRUpdateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RCRCreateRequest struct {
	SessionToken string  `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	Fee          float32 `protobuf:"fixed32,2,opt,name=fee" json:"fee,omitempty"`
	Start        string  `protobuf:"bytes,3,opt,name=start" json:"start,omitempty"`
	End          string  `protobuf:"bytes,4,opt,name=end" json:"end,omitempty"`
	Interval     uint32  `protobuf:"varint,5,opt,name=interval" json:"interval,omitempty"`
	IntervalUnit uint32  `protobuf:"varint,6,opt,name=intervalUnit" json:"intervalUnit,omitempty"`
	MerchantID   uint32  `protobuf:"varint,7,opt,name=merchantID" json:"merchantID,omitempty"`
	RoomID       uint32  `protobuf:"varint,8,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *RCRCreateRequest) Reset()                    { *m = RCRCreateRequest{} }
func (m *RCRCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*RCRCreateRequest) ProtoMessage()               {}
func (*RCRCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *RCRCreateRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *RCRCreateRequest) GetFee() float32 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *RCRCreateRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *RCRCreateRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *RCRCreateRequest) GetInterval() uint32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *RCRCreateRequest) GetIntervalUnit() uint32 {
	if m != nil {
		return m.IntervalUnit
	}
	return 0
}

func (m *RCRCreateRequest) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *RCRCreateRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type RCRCreateResponse struct {
	Success  bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	RecodeID uint32 `protobuf:"varint,2,opt,name=recodeID" json:"recodeID,omitempty"`
}

func (m *RCRCreateResponse) Reset()                    { *m = RCRCreateResponse{} }
func (m *RCRCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*RCRCreateResponse) ProtoMessage()               {}
func (*RCRCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *RCRCreateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RCRCreateResponse) GetRecodeID() uint32 {
	if m != nil {
		return m.RecodeID
	}
	return 0
}

func init() {
	proto.RegisterType((*OSQueryOrderRequest)(nil), "Aphro.Order.PB.OSQueryOrderRequest")
	proto.RegisterType((*OSQueryOrderResponse)(nil), "Aphro.Order.PB.OSQueryOrderResponse")
	proto.RegisterType((*OSQueryOrderResponse_InnerOSQueryOrderRequest)(nil), "Aphro.Order.PB.OSQueryOrderResponse.InnerOSQueryOrderRequest")
	proto.RegisterType((*OSDeleteOrderRequest)(nil), "Aphro.Order.PB.OSDeleteOrderRequest")
	proto.RegisterType((*OSDeleteOrderResponse)(nil), "Aphro.Order.PB.OSDeleteOrderResponse")
	proto.RegisterType((*OSUpdateOrderRequest)(nil), "Aphro.Order.PB.OSUpdateOrderRequest")
	proto.RegisterType((*OSUpdateOrderResponse)(nil), "Aphro.Order.PB.OSUpdateOrderResponse")
	proto.RegisterType((*OSCreateOrderRequest)(nil), "Aphro.Order.PB.OSCreateOrderRequest")
	proto.RegisterType((*OSCreateOrderResponse)(nil), "Aphro.Order.PB.OSCreateOrderResponse")
	proto.RegisterType((*PaymentInfo)(nil), "Aphro.Order.PB.PaymentInfo")
	proto.RegisterType((*InnerComodityInfo)(nil), "Aphro.Order.PB.InnerComodityInfo")
	proto.RegisterType((*RSDeleteResponse)(nil), "Aphro.Order.PB.RSDeleteResponse")
	proto.RegisterType((*RSResult)(nil), "Aphro.Order.PB.RSResult")
	proto.RegisterType((*RSQueryRequest)(nil), "Aphro.Order.PB.RSQueryRequest")
	proto.RegisterType((*RSQueryResponse)(nil), "Aphro.Order.PB.RSQueryResponse")
	proto.RegisterType((*RSCreateRequest)(nil), "Aphro.Order.PB.RSCreateRequest")
	proto.RegisterType((*RSCreateResponse)(nil), "Aphro.Order.PB.RSCreateResponse")
	proto.RegisterType((*RSUpdateRequest)(nil), "Aphro.Order.PB.RSUpdateRequest")
	proto.RegisterType((*RSUpdateResponse)(nil), "Aphro.Order.PB.RSUpdateResponse")
	proto.RegisterType((*RSLocation)(nil), "Aphro.Order.PB.RSLocation")
	proto.RegisterType((*RSTerminalBindRequest)(nil), "Aphro.Order.PB.RSTerminalBindRequest")
	proto.RegisterType((*RSTerminalBindResponse)(nil), "Aphro.Order.PB.RSTerminalBindResponse")
	proto.RegisterType((*RSTerminalUnbindRequest)(nil), "Aphro.Order.PB.RSTerminalUnbindRequest")
	proto.RegisterType((*RSTerminalUnbindResponse)(nil), "Aphro.Order.PB.RSTerminalUnbindResponse")
	proto.RegisterType((*RCRResult)(nil), "Aphro.Order.PB.RCRResult")
	proto.RegisterType((*RCRDeleteRequest)(nil), "Aphro.Order.PB.RCRDeleteRequest")
	proto.RegisterType((*RCRDeleteResponse)(nil), "Aphro.Order.PB.RCRDeleteResponse")
	proto.RegisterType((*RCRQueryRequest)(nil), "Aphro.Order.PB.RCRQueryRequest")
	proto.RegisterType((*RCRQueryResponse)(nil), "Aphro.Order.PB.RCRQueryResponse")
	proto.RegisterType((*RCRUpdateRequest)(nil), "Aphro.Order.PB.RCRUpdateRequest")
	proto.RegisterType((*RCRUpdateResponse)(nil), "Aphro.Order.PB.RCRUpdateResponse")
	proto.RegisterType((*RCRCreateRequest)(nil), "Aphro.Order.PB.RCRCreateRequest")
	proto.RegisterType((*RCRCreateResponse)(nil), "Aphro.Order.PB.RCRCreateResponse")
	proto.RegisterEnum("Aphro.Order.PB.EPropersalAccountType", EPropersalAccountType_name, EPropersalAccountType_value)
	proto.RegisterEnum("Aphro.Order.PB.PaymentInfo_E_PaymentType", PaymentInfo_E_PaymentType_name, PaymentInfo_E_PaymentType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OrderService service

type OrderServiceClient interface {
	// 创建订单
	CreateOrder(ctx context.Context, in *OSCreateOrderRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 更新订单
	UpdateOrder(ctx context.Context, in *OSUpdateOrderRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 删除订单
	DeleteOrder(ctx context.Context, in *OSDeleteOrderRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 查询订单
	QueryOrder(ctx context.Context, in *OSQueryOrderRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) CreateOrder(ctx context.Context, in *OSCreateOrderRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Order.PB.OrderService/createOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateOrder(ctx context.Context, in *OSUpdateOrderRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Order.PB.OrderService/updateOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) DeleteOrder(ctx context.Context, in *OSDeleteOrderRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Order.PB.OrderService/deleteOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) QueryOrder(ctx context.Context, in *OSQueryOrderRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Order.PB.OrderService/queryOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrderService service

type OrderServiceServer interface {
	// 创建订单
	CreateOrder(context.Context, *OSCreateOrderRequest) (*Aphro_CommonBiz.Response, error)
	// 更新订单
	UpdateOrder(context.Context, *OSUpdateOrderRequest) (*Aphro_CommonBiz.Response, error)
	// 删除订单
	DeleteOrder(context.Context, *OSDeleteOrderRequest) (*Aphro_CommonBiz.Response, error)
	// 查询订单
	QueryOrder(context.Context, *OSQueryOrderRequest) (*Aphro_CommonBiz.Response, error)
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OSCreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Order.PB.OrderService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateOrder(ctx, req.(*OSCreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_UpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OSUpdateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).UpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Order.PB.OrderService/UpdateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).UpdateOrder(ctx, req.(*OSUpdateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_DeleteOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OSDeleteOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).DeleteOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Order.PB.OrderService/DeleteOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).DeleteOrder(ctx, req.(*OSDeleteOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_QueryOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OSQueryOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).QueryOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Order.PB.OrderService/QueryOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).QueryOrder(ctx, req.(*OSQueryOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Aphro.Order.PB.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createOrder",
			Handler:    _OrderService_CreateOrder_Handler,
		},
		{
			MethodName: "updateOrder",
			Handler:    _OrderService_UpdateOrder_Handler,
		},
		{
			MethodName: "deleteOrder",
			Handler:    _OrderService_DeleteOrder_Handler,
		},
		{
			MethodName: "queryOrder",
			Handler:    _OrderService_QueryOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}

func init() { proto.RegisterFile("order.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcf, 0x6e, 0x1b, 0x45,
	0x18, 0xef, 0xae, 0x9d, 0xc4, 0xf9, 0x1c, 0x07, 0x77, 0x9a, 0xb6, 0x4b, 0x54, 0x21, 0x77, 0xa9,
	0x50, 0x54, 0x81, 0xdd, 0xa6, 0x15, 0x87, 0xa2, 0x1e, 0x1c, 0x3b, 0xa8, 0x16, 0x25, 0x49, 0xc7,
	0x8e, 0xaa, 0xc2, 0x21, 0xda, 0xac, 0xa7, 0xce, 0x8a, 0xdd, 0x1d, 0x77, 0x76, 0xb7, 0x28, 0x9c,
	0x10, 0x70, 0xe2, 0xc2, 0x81, 0x17, 0x80, 0x07, 0x40, 0x1c, 0x78, 0x14, 0x1e, 0x01, 0x24, 0x78,
	0x0a, 0x84, 0x66, 0xf6, 0x8f, 0x77, 0x76, 0xd7, 0xd9, 0xb8, 0xaa, 0x5a, 0x24, 0x7a, 0x9b, 0xef,
	0xdb, 0xd9, 0xef, 0xdf, 0xef, 0x37, 0xf3, 0xcd, 0x0c, 0xd4, 0x29, 0x1b, 0x13, 0xd6, 0x9e, 0x32,
	0xea, 0x53, 0xb4, 0xde, 0x9d, 0x9e, 0x30, 0xda, 0xde, 0x17, 0xaa, 0x83, 0x9d, 0xcd, 0x6b, 0x13,
	0x4a, 0x27, 0x36, 0xe9, 0x18, 0x53, 0xab, 0x63, 0xb8, 0x2e, 0xf5, 0x0d, 0xdf, 0xa2, 0xae, 0x17,
	0xce, 0xde, 0xec, 0x4e, 0x2c, 0xff, 0x24, 0x38, 0x6e, 0x9b, 0xd4, 0xe9, 0xd8, 0x86, 0x33, 0x35,
	0xd8, 0xf8, 0xf6, 0xad, 0xdb, 0x77, 0x3b, 0x06, 0x37, 0xd2, 0xe9, 0x51, 0xc7, 0xa1, 0xee, 0x8e,
	0xf5, 0x55, 0x07, 0x13, 0x6f, 0x4a, 0x5d, 0x8f, 0x74, 0x0e, 0x76, 0x3a, 0x2c, 0x1a, 0x87, 0x26,
	0xf4, 0x47, 0x70, 0x69, 0x7f, 0xf8, 0x28, 0x20, 0xec, 0x54, 0xf8, 0xc4, 0xe4, 0x59, 0x40, 0x3c,
	0x1f, 0xe9, 0xb0, 0xe6, 0x11, 0xcf, 0xb3, 0xa8, 0x3b, 0xa2, 0x5f, 0x10, 0x57, 0x53, 0x5a, 0xca,
	0xd6, 0x2a, 0x96, 0x74, 0xe8, 0x0a, 0x2c, 0x33, 0x4a, 0x9d, 0x41, 0x5f, 0x53, 0x5b, 0xca, 0x56,
	0x03, 0x47, 0x92, 0xfe, 0xfd, 0x12, 0x6c, 0xc8, 0x36, 0x43, 0x8f, 0x48, 0x83, 0x15, 0x2f, 0x30,
	0x4d, 0xe2, 0x79, 0xc2, 0x5e, 0x0d, 0xc7, 0x22, 0x3a, 0x84, 0x65, 0x51, 0x05, 0x4f, 0x53, 0x5b,
	0x95, 0xad, 0xfa, 0xf6, 0xfd, 0xb6, 0x5c, 0x87, 0x76, 0x91, 0xbd, 0xf6, 0xc0, 0x75, 0x09, 0x2b,
	0x88, 0x1e, 0x47, 0xc6, 0x36, 0xbf, 0xae, 0x82, 0x36, 0x6f, 0x12, 0xba, 0x01, 0x0d, 0x9f, 0x19,
	0xae, 0x67, 0x98, 0xbc, 0xa4, 0x49, 0x16, 0xb2, 0x32, 0x95, 0x64, 0x25, 0x9d, 0x24, 0xba, 0x0e,
	0x6b, 0xc2, 0xc9, 0x91, 0x1b, 0x38, 0xc7, 0x84, 0x69, 0x0d, 0x51, 0xa0, 0x10, 0xcb, 0x3d, 0xa1,
	0xe2, 0xe9, 0x0a, 0x71, 0xd0, 0xd7, 0xd6, 0xc4, 0xbf, 0xb1, 0xc8, 0x8d, 0x1a, 0x0e, 0x0d, 0x5c,
	0x5f, 0xab, 0xb6, 0x94, 0x2d, 0x15, 0x47, 0x12, 0xba, 0x05, 0x97, 0x68, 0xe0, 0xfb, 0x84, 0x8d,
	0xa4, 0xc0, 0x96, 0x84, 0xed, 0xa2, 0x4f, 0xe8, 0x1a, 0xac, 0x06, 0x1e, 0x61, 0xdd, 0x09, 0x71,
	0x7d, 0x6d, 0x59, 0xcc, 0x9b, 0x29, 0x78, 0x04, 0x26, 0x75, 0x1c, 0xfe, 0x6d, 0x45, 0x7c, 0x8b,
	0x45, 0x9e, 0xfc, 0x94, 0xd1, 0x29, 0x61, 0x9e, 0x61, 0xef, 0x19, 0x0e, 0xd1, 0x6a, 0xe2, 0xbb,
	0xac, 0x44, 0x2d, 0xa8, 0x27, 0x8a, 0x41, 0x5f, 0x5b, 0x15, 0x59, 0xa4, 0x55, 0xe8, 0x33, 0xd8,
	0x48, 0xc4, 0xae, 0x69, 0xf2, 0x2c, 0x46, 0xa7, 0x53, 0xa2, 0x41, 0x4b, 0xd9, 0x5a, 0xdf, 0x7e,
	0x2f, 0x0b, 0xe3, 0xee, 0x51, 0xd1, 0x6c, 0x5c, 0x68, 0x03, 0xf5, 0xa0, 0xce, 0xc3, 0xa5, 0x63,
	0xcb, 0xb7, 0x88, 0xa7, 0xd5, 0x05, 0x33, 0xae, 0x67, 0x4d, 0x0a, 0x7c, 0x7b, 0x54, 0x4c, 0x3b,
	0x1d, 0xb8, 0x4f, 0x29, 0x4e, 0xff, 0xa5, 0x7f, 0xc9, 0xb9, 0xd8, 0x27, 0x36, 0xf1, 0xc9, 0xc2,
	0x04, 0xcf, 0x62, 0x5c, 0x5f, 0x00, 0x63, 0xfd, 0x36, 0x5c, 0xce, 0x38, 0x2e, 0x5b, 0x05, 0xfa,
	0x4f, 0x55, 0x1e, 0xec, 0xe1, 0x74, 0x6c, 0xbc, 0x40, 0xb0, 0x6f, 0xe8, 0xfc, 0x7f, 0xa0, 0xb3,
	0x60, 0x95, 0xc4, 0x90, 0x52, 0x56, 0xfd, 0x51, 0xe1, 0xac, 0xea, 0x31, 0xf2, 0xea, 0x59, 0xf5,
	0x86, 0x18, 0xaf, 0x8c, 0x18, 0x43, 0x4e, 0x0c, 0x09, 0xe4, 0xd2, 0xa6, 0xdb, 0x82, 0xf4, 0xfa,
	0x16, 0xc8, 0xca, 0x4b, 0x5e, 0x7f, 0x08, 0xf5, 0x03, 0xe3, 0x94, 0x17, 0x92, 0x3b, 0xd4, 0xef,
	0x43, 0x63, 0xf7, 0x28, 0x52, 0x88, 0xc8, 0x01, 0x96, 0x0f, 0xf7, 0x3e, 0xd9, 0xdb, 0x7f, 0xdc,
	0xbc, 0xc0, 0xc7, 0xdd, 0x87, 0x83, 0x83, 0xee, 0x93, 0xa6, 0xc2, 0xc7, 0x8f, 0x77, 0x7b, 0x0f,
	0xba, 0xa3, 0xa6, 0x8a, 0x6a, 0x50, 0xed, 0x75, 0x87, 0x0f, 0x9a, 0x15, 0xdd, 0x81, 0x8b, 0xb9,
	0x24, 0x10, 0x82, 0xaa, 0xcb, 0x71, 0x09, 0xc9, 0x27, 0xc6, 0x68, 0x03, 0x96, 0xa6, 0xcc, 0x32,
	0x89, 0x08, 0x49, 0xc5, 0xa1, 0x80, 0xde, 0x01, 0x70, 0x08, 0x33, 0x4f, 0x0c, 0xd7, 0x4f, 0x88,
	0x96, 0xd2, 0xa0, 0x75, 0x50, 0xad, 0xb1, 0x20, 0x5a, 0x03, 0xab, 0xd6, 0x58, 0x7f, 0x1f, 0x9a,
	0x38, 0xda, 0x80, 0xcf, 0xb1, 0x4a, 0x7e, 0x50, 0xa1, 0x86, 0x87, 0x98, 0x78, 0x81, 0xed, 0xa7,
	0xf8, 0xac, 0x48, 0x7c, 0x96, 0x43, 0x50, 0x73, 0x21, 0xe8, 0xb0, 0xe6, 0x13, 0xe6, 0x58, 0xae,
	0x61, 0xf7, 0xe8, 0x98, 0x88, 0x20, 0x57, 0xb1, 0xa4, 0x43, 0x1f, 0x42, 0xcd, 0xa6, 0xa6, 0x38,
	0xc6, 0x89, 0x60, 0xeb, 0xdb, 0x9b, 0x59, 0xa8, 0xf1, 0xf0, 0x61, 0x34, 0x03, 0x27, 0x73, 0x79,
	0x4c, 0x9e, 0x6f, 0xf8, 0x81, 0x27, 0x96, 0x49, 0x03, 0x47, 0x12, 0xda, 0x84, 0x1a, 0x8f, 0x4e,
	0x90, 0x3b, 0x5c, 0x18, 0x89, 0x8c, 0x3e, 0x82, 0xba, 0x79, 0x62, 0xb0, 0x09, 0xc1, 0x81, 0x4d,
	0x3c, 0x6d, 0x45, 0x30, 0xeb, 0xed, 0x9c, 0xbb, 0x1e, 0x0e, 0xf3, 0xc6, 0xe9, 0xd9, 0xba, 0x0d,
	0xeb, 0x38, 0x3c, 0x36, 0xbd, 0x84, 0x43, 0x61, 0x19, 0x7a, 0xfa, 0xe7, 0xf0, 0x56, 0xe2, 0xad,
	0x94, 0xb9, 0x6d, 0x58, 0xe2, 0x66, 0xe3, 0xd3, 0xa2, 0x96, 0x2f, 0x60, 0x94, 0x50, 0x38, 0x4d,
	0xff, 0x45, 0xe1, 0xd6, 0xc3, 0xd5, 0x91, 0x4a, 0x46, 0xc2, 0x4a, 0x29, 0xc0, 0x2a, 0x9b, 0xb0,
	0x5a, 0x90, 0x70, 0x1a, 0xcf, 0xca, 0x02, 0x78, 0xa6, 0x71, 0xab, 0xca, 0xb8, 0xe9, 0x7d, 0x4e,
	0xdd, 0x38, 0xdc, 0xa8, 0x1a, 0xf3, 0x38, 0x99, 0xaa, 0x92, 0x2a, 0x53, 0xfa, 0x67, 0x95, 0x67,
	0x1d, 0x36, 0x8b, 0x97, 0x01, 0xe1, 0xeb, 0x66, 0xf7, 0x4a, 0x86, 0xdd, 0x3b, 0x32, 0xbb, 0x97,
	0x05, 0x17, 0x5a, 0x05, 0xec, 0x96, 0x80, 0x97, 0x49, 0x2e, 0x36, 0x89, 0xb8, 0x44, 0x79, 0xde,
	0x65, 0x2a, 0xfa, 0x31, 0xc0, 0x2c, 0x7a, 0xde, 0x93, 0x6c, 0xea, 0x4e, 0x2c, 0x3f, 0x48, 0xe8,
	0x33, 0x53, 0xf0, 0xc8, 0x6d, 0xc3, 0x0f, 0x3f, 0x86, 0xbc, 0x49, 0x64, 0xfd, 0x57, 0x05, 0x2e,
	0xe3, 0xe1, 0x28, 0x2a, 0xdc, 0x8e, 0xe5, 0x8e, 0x17, 0xc1, 0x27, 0x8b, 0x83, 0x5a, 0x82, 0x43,
	0x65, 0x31, 0x1c, 0x22, 0xec, 0xab, 0xd2, 0x9d, 0x6e, 0x1b, 0xae, 0x64, 0x03, 0x2e, 0xdd, 0x52,
	0x0f, 0xe1, 0xea, 0xec, 0x9f, 0x43, 0xf7, 0x38, 0x95, 0xe6, 0x3c, 0x32, 0x9f, 0x63, 0xc1, 0xe9,
	0x77, 0x41, 0xcb, 0x9b, 0x2d, 0x0d, 0xe6, 0x2f, 0x05, 0x56, 0x93, 0x8d, 0x2e, 0xb3, 0x1b, 0x29,
	0xb9, 0x8d, 0x7c, 0x03, 0x96, 0x70, 0x0f, 0x0f, 0xfa, 0x82, 0x73, 0x0d, 0x1c, 0x0a, 0xa8, 0x09,
	0x95, 0xa7, 0x24, 0xee, 0x4a, 0x7c, 0xc8, 0xe7, 0x79, 0xbe, 0xc1, 0xfc, 0x68, 0x2d, 0x84, 0x02,
	0x9f, 0x47, 0xdc, 0x71, 0xb4, 0xaa, 0xf9, 0x90, 0x93, 0xc1, 0x72, 0x7d, 0xc2, 0x9e, 0x1b, 0x76,
	0x44, 0xf0, 0x44, 0xe6, 0x39, 0xc7, 0xe3, 0x43, 0xd7, 0x0a, 0x4f, 0x37, 0x0d, 0x2c, 0xe9, 0x52,
	0xf5, 0xaa, 0x49, 0xf5, 0x42, 0x50, 0x7d, 0x6a, 0x1b, 0x93, 0xe8, 0xc4, 0x22, 0xc6, 0xfa, 0x77,
	0x0a, 0x34, 0x71, 0x0f, 0xc7, 0x9d, 0x2f, 0x2c, 0x78, 0x59, 0xc2, 0xe7, 0xd9, 0xe9, 0x8a, 0x8b,
	0x32, 0x27, 0x34, 0xfd, 0x03, 0xb8, 0x98, 0x8a, 0xa2, 0x14, 0x9f, 0x6f, 0xf9, 0x16, 0xdd, 0xc3,
	0x52, 0xbf, 0x49, 0x1c, 0x2a, 0x69, 0x87, 0xd9, 0x50, 0xab, 0x05, 0xa1, 0x96, 0x35, 0xea, 0x39,
	0x07, 0x56, 0xdd, 0x10, 0xa5, 0x3b, 0x6f, 0x1b, 0xba, 0x03, 0x2b, 0x4c, 0xf0, 0x29, 0x6e, 0x44,
	0x67, 0xb4, 0xd6, 0x78, 0xa6, 0xfe, 0x4f, 0x08, 0x8f, 0xbc, 0x2d, 0xbf, 0x18, 0x1f, 0xb3, 0x95,
	0x58, 0x2d, 0xa8, 0xc4, 0x7f, 0x8e, 0xb3, 0x11, 0x31, 0xe6, 0xef, 0xb9, 0x19, 0x62, 0xfc, 0x1d,
	0xd6, 0x2b, 0xd7, 0xbc, 0x4b, 0xb7, 0xc9, 0xd7, 0x97, 0xb9, 0x8c, 0xe6, 0xca, 0x19, 0xec, 0x93,
	0x2b, 0x33, 0x10, 0x95, 0xc9, 0xf4, 0xfd, 0xf9, 0xf4, 0xe3, 0xbd, 0x91, 0x98, 0x74, 0x4c, 0x12,
	0x8a, 0x27, 0xf2, 0xcd, 0x3e, 0x5c, 0x29, 0xbe, 0x83, 0xf0, 0xb3, 0xf9, 0xf0, 0xc9, 0x70, 0xb4,
	0xfb, 0x69, 0xf3, 0x02, 0x5a, 0x07, 0xe8, 0x1d, 0xed, 0xee, 0xf5, 0x0f, 0xf6, 0x07, 0x7b, 0xa3,
	0xa6, 0xc2, 0xe5, 0x9d, 0x99, 0xac, 0x6e, 0xff, 0x56, 0x81, 0x35, 0xc1, 0xe5, 0x21, 0x61, 0xcf,
	0xf9, 0x19, 0xfc, 0x04, 0xea, 0xe6, 0xec, 0x8e, 0x81, 0x6e, 0xe4, 0x9f, 0xe9, 0xf2, 0xf7, 0xcc,
	0xcd, 0x78, 0x55, 0x24, 0xef, 0x91, 0xed, 0x38, 0x39, 0x5d, 0xfb, 0xe6, 0xf7, 0x3f, 0x7f, 0x54,
	0x91, 0xde, 0xe8, 0x88, 0x6b, 0x47, 0x27, 0x34, 0x7e, 0x4f, 0xb9, 0xc9, 0x3d, 0x05, 0xb3, 0x6b,
	0x6e, 0x91, 0xa7, 0xfc, 0x3b, 0xc9, 0x22, 0x9e, 0x42, 0xe3, 0x91, 0xa7, 0xf1, 0xec, 0x99, 0xa6,
	0xc8, 0x53, 0xfe, 0xf9, 0x68, 0x11, 0x4f, 0xa1, 0x71, 0xee, 0x89, 0x00, 0x3c, 0x4b, 0x9e, 0x21,
	0xd1, 0xbb, 0x67, 0xbf, 0x71, 0x96, 0xfa, 0xb9, 0x2a, 0xfc, 0x5c, 0xd4, 0xd7, 0x22, 0x3f, 0xc2,
	0xf4, 0x3d, 0xe5, 0xe6, 0xf1, 0xb2, 0x78, 0xd9, 0xbd, 0xf3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x12, 0x6d, 0xf9, 0x57, 0x59, 0x16, 0x00, 0x00,
}
