// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merchant.proto

/*
Package Aphro_Merchant_pb is a generated protocol buffer package.

It is generated from these files:
	merchant.proto

It has these top-level messages:
	MerchantWaiterQueryRequest
	MerchantWaiterQueryResponse
	MerchantWaiterCreateRequest
	MerchantWaiterCreateResponse
	MerchantWaiterDeleteRequest
	MerchantWaiterDeleteResponse
	MerchantRoomInfoRequest
	MerchantRoomInfoResponse
	MerchantOpenRequest
	MerchantOpenResponse
	MerchantRegisterRequest
	MerchantRegisterResponse
	MerchantChangePswRequest
	MerchantChangePswResponse
	MerchantLoginRequest
	MerchantLoginResponse
	MerchantInfoRequest
	MerchantUsersQueryRequest
	MerchantUsersCreateRequest
	MerchantUsersCreateResponse
	MerchantUsersQueryResponse
	MerchantUsersDeleteRequest
	MerchantUsersDeleteResponse
	InnerMerchantAccount
	MerchantInfoResponse
	MerchantSendCodeRequest
	MerchantSendCodeResponse
	MerchantVerifyCodeRequest
	MerchantVerifyCodeResponse
	MerchantAccountCellphoneUnquieReqeuest
	MerchantAccountCellphoneUnquieResponse
*/
package Aphro_Merchant_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import Aphro_CommonBiz "github.com/lampard1014/aphro/CommonBiz/Response/PB"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MerchantAccountCellphoneUnquieReqeuest_Role int32

const (
	MerchantAccountCellphoneUnquieReqeuest_Root          MerchantAccountCellphoneUnquieReqeuest_Role = 0
	MerchantAccountCellphoneUnquieReqeuest_Administrator MerchantAccountCellphoneUnquieReqeuest_Role = 1
	MerchantAccountCellphoneUnquieReqeuest_Operator      MerchantAccountCellphoneUnquieReqeuest_Role = 2
)

var MerchantAccountCellphoneUnquieReqeuest_Role_name = map[int32]string{
	0: "Root",
	1: "Administrator",
	2: "Operator",
}
var MerchantAccountCellphoneUnquieReqeuest_Role_value = map[string]int32{
	"Root":          0,
	"Administrator": 1,
	"Operator":      2,
}

func (x MerchantAccountCellphoneUnquieReqeuest_Role) String() string {
	return proto.EnumName(MerchantAccountCellphoneUnquieReqeuest_Role_name, int32(x))
}
func (MerchantAccountCellphoneUnquieReqeuest_Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{29, 0}
}

type MerchantWaiterQueryRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
}

func (m *MerchantWaiterQueryRequest) Reset()                    { *m = MerchantWaiterQueryRequest{} }
func (m *MerchantWaiterQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterQueryRequest) ProtoMessage()               {}
func (*MerchantWaiterQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MerchantWaiterQueryRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type MerchantWaiterQueryResponse struct {
	Success bool                                                           `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Waiters []*MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse `protobuf:"bytes,2,rep,name=waiters" json:"waiters,omitempty"`
}

func (m *MerchantWaiterQueryResponse) Reset()                    { *m = MerchantWaiterQueryResponse{} }
func (m *MerchantWaiterQueryResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterQueryResponse) ProtoMessage()               {}
func (*MerchantWaiterQueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MerchantWaiterQueryResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *MerchantWaiterQueryResponse) GetWaiters() []*MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse {
	if m != nil {
		return m.Waiters
	}
	return nil
}

type MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse struct {
	Waiterid   uint32 `protobuf:"varint,1,opt,name=waiterid" json:"waiterid,omitempty"`
	MerchantID string `protobuf:"bytes,2,opt,name=merchantID" json:"merchantID,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Content    string `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	Reserve    string `protobuf:"bytes,4,opt,name=reserve" json:"reserve,omitempty"`
}

func (m *MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse) Reset() {
	*m = MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse{}
}
func (m *MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse) ProtoMessage() {}
func (*MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

func (m *MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse) GetWaiterid() uint32 {
	if m != nil {
		return m.Waiterid
	}
	return 0
}

func (m *MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse) GetMerchantID() string {
	if m != nil {
		return m.MerchantID
	}
	return ""
}

func (m *MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse) GetReserve() string {
	if m != nil {
		return m.Reserve
	}
	return ""
}

type MerchantWaiterCreateRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	MerchantID   string `protobuf:"bytes,2,opt,name=merchantID" json:"merchantID,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Content      string `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	Reserve      string `protobuf:"bytes,4,opt,name=reserve" json:"reserve,omitempty"`
}

func (m *MerchantWaiterCreateRequest) Reset()                    { *m = MerchantWaiterCreateRequest{} }
func (m *MerchantWaiterCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterCreateRequest) ProtoMessage()               {}
func (*MerchantWaiterCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MerchantWaiterCreateRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantWaiterCreateRequest) GetMerchantID() string {
	if m != nil {
		return m.MerchantID
	}
	return ""
}

func (m *MerchantWaiterCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantWaiterCreateRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MerchantWaiterCreateRequest) GetReserve() string {
	if m != nil {
		return m.Reserve
	}
	return ""
}

type MerchantWaiterCreateResponse struct {
	Success  bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Waiterid uint32 `protobuf:"varint,2,opt,name=waiterid" json:"waiterid,omitempty"`
}

func (m *MerchantWaiterCreateResponse) Reset()                    { *m = MerchantWaiterCreateResponse{} }
func (m *MerchantWaiterCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterCreateResponse) ProtoMessage()               {}
func (*MerchantWaiterCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MerchantWaiterCreateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *MerchantWaiterCreateResponse) GetWaiterid() uint32 {
	if m != nil {
		return m.Waiterid
	}
	return 0
}

type MerchantWaiterDeleteRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	Waiterid     uint64 `protobuf:"varint,2,opt,name=waiterid" json:"waiterid,omitempty"`
}

func (m *MerchantWaiterDeleteRequest) Reset()                    { *m = MerchantWaiterDeleteRequest{} }
func (m *MerchantWaiterDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterDeleteRequest) ProtoMessage()               {}
func (*MerchantWaiterDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MerchantWaiterDeleteRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantWaiterDeleteRequest) GetWaiterid() uint64 {
	if m != nil {
		return m.Waiterid
	}
	return 0
}

type MerchantWaiterDeleteResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantWaiterDeleteResponse) Reset()                    { *m = MerchantWaiterDeleteResponse{} }
func (m *MerchantWaiterDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterDeleteResponse) ProtoMessage()               {}
func (*MerchantWaiterDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MerchantWaiterDeleteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantRoomInfoRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	RoomID       uint32 `protobuf:"varint,2,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *MerchantRoomInfoRequest) Reset()                    { *m = MerchantRoomInfoRequest{} }
func (m *MerchantRoomInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantRoomInfoRequest) ProtoMessage()               {}
func (*MerchantRoomInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MerchantRoomInfoRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantRoomInfoRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type MerchantRoomInfoResponse struct {
	Reverse string `protobuf:"bytes,1,opt,name=reverse" json:"reverse,omitempty"`
}

func (m *MerchantRoomInfoResponse) Reset()                    { *m = MerchantRoomInfoResponse{} }
func (m *MerchantRoomInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantRoomInfoResponse) ProtoMessage()               {}
func (*MerchantRoomInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MerchantRoomInfoResponse) GetReverse() string {
	if m != nil {
		return m.Reverse
	}
	return ""
}

type MerchantOpenRequest struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Cellphone  string `protobuf:"bytes,2,opt,name=cellphone" json:"cellphone,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	PaymentBit uint32 `protobuf:"varint,4,opt,name=paymentBit" json:"paymentBit,omitempty"`
}

func (m *MerchantOpenRequest) Reset()                    { *m = MerchantOpenRequest{} }
func (m *MerchantOpenRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantOpenRequest) ProtoMessage()               {}
func (*MerchantOpenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MerchantOpenRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantOpenRequest) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *MerchantOpenRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MerchantOpenRequest) GetPaymentBit() uint32 {
	if m != nil {
		return m.PaymentBit
	}
	return 0
}

type MerchantOpenResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantOpenResponse) Reset()                    { *m = MerchantOpenResponse{} }
func (m *MerchantOpenResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantOpenResponse) ProtoMessage()               {}
func (*MerchantOpenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MerchantOpenResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantRegisterRequest struct {
	Key          string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	VerifyCode   string `protobuf:"bytes,3,opt,name=verifyCode" json:"verifyCode,omitempty"`
	Role         uint32 `protobuf:"varint,5,opt,name=role" json:"role,omitempty"`
	MerchantID   uint32 `protobuf:"varint,6,opt,name=merchantID" json:"merchantID,omitempty"`
	TokenRequest string `protobuf:"bytes,7,opt,name=tokenRequest" json:"tokenRequest,omitempty"`
}

func (m *MerchantRegisterRequest) Reset()                    { *m = MerchantRegisterRequest{} }
func (m *MerchantRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantRegisterRequest) ProtoMessage()               {}
func (*MerchantRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MerchantRegisterRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MerchantRegisterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantRegisterRequest) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

func (m *MerchantRegisterRequest) GetRole() uint32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *MerchantRegisterRequest) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *MerchantRegisterRequest) GetTokenRequest() string {
	if m != nil {
		return m.TokenRequest
	}
	return ""
}

type MerchantRegisterResponse struct {
	Success      bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken" json:"sessionToken,omitempty"`
}

func (m *MerchantRegisterResponse) Reset()                    { *m = MerchantRegisterResponse{} }
func (m *MerchantRegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantRegisterResponse) ProtoMessage()               {}
func (*MerchantRegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *MerchantRegisterResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *MerchantRegisterResponse) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type MerchantChangePswRequest struct {
	Key          string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken" json:"sessionToken,omitempty"`
	VerifyCode   string `protobuf:"bytes,3,opt,name=verifyCode" json:"verifyCode,omitempty"`
}

func (m *MerchantChangePswRequest) Reset()                    { *m = MerchantChangePswRequest{} }
func (m *MerchantChangePswRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantChangePswRequest) ProtoMessage()               {}
func (*MerchantChangePswRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *MerchantChangePswRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MerchantChangePswRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantChangePswRequest) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

type MerchantChangePswResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantChangePswResponse) Reset()                    { *m = MerchantChangePswResponse{} }
func (m *MerchantChangePswResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantChangePswResponse) ProtoMessage()               {}
func (*MerchantChangePswResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *MerchantChangePswResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantLoginRequest struct {
	Key          string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	TokenRequest string `protobuf:"bytes,2,opt,name=tokenRequest" json:"tokenRequest,omitempty"`
	SessionToken string `protobuf:"bytes,3,opt,name=sessionToken" json:"sessionToken,omitempty"`
}

func (m *MerchantLoginRequest) Reset()                    { *m = MerchantLoginRequest{} }
func (m *MerchantLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantLoginRequest) ProtoMessage()               {}
func (*MerchantLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *MerchantLoginRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MerchantLoginRequest) GetTokenRequest() string {
	if m != nil {
		return m.TokenRequest
	}
	return ""
}

func (m *MerchantLoginRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type MerchantLoginResponse struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	Success      bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantLoginResponse) Reset()                    { *m = MerchantLoginResponse{} }
func (m *MerchantLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantLoginResponse) ProtoMessage()               {}
func (*MerchantLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *MerchantLoginResponse) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantLoginResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantInfoRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	MerchantID   string `protobuf:"bytes,2,opt,name=merchantID" json:"merchantID,omitempty"`
}

func (m *MerchantInfoRequest) Reset()                    { *m = MerchantInfoRequest{} }
func (m *MerchantInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantInfoRequest) ProtoMessage()               {}
func (*MerchantInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MerchantInfoRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantInfoRequest) GetMerchantID() string {
	if m != nil {
		return m.MerchantID
	}
	return ""
}

type MerchantUsersQueryRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
}

func (m *MerchantUsersQueryRequest) Reset()                    { *m = MerchantUsersQueryRequest{} }
func (m *MerchantUsersQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantUsersQueryRequest) ProtoMessage()               {}
func (*MerchantUsersQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *MerchantUsersQueryRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type MerchantUsersCreateRequest struct {
	Key          string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SessionToken string `protobuf:"bytes,3,opt,name=sessionToken" json:"sessionToken,omitempty"`
}

func (m *MerchantUsersCreateRequest) Reset()                    { *m = MerchantUsersCreateRequest{} }
func (m *MerchantUsersCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantUsersCreateRequest) ProtoMessage()               {}
func (*MerchantUsersCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *MerchantUsersCreateRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MerchantUsersCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantUsersCreateRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type MerchantUsersCreateResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Uid     uint32 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *MerchantUsersCreateResponse) Reset()                    { *m = MerchantUsersCreateResponse{} }
func (m *MerchantUsersCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantUsersCreateResponse) ProtoMessage()               {}
func (*MerchantUsersCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *MerchantUsersCreateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *MerchantUsersCreateResponse) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type MerchantUsersQueryResponse struct {
	Success bool                    `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Users   []*InnerMerchantAccount `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *MerchantUsersQueryResponse) Reset()                    { *m = MerchantUsersQueryResponse{} }
func (m *MerchantUsersQueryResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantUsersQueryResponse) ProtoMessage()               {}
func (*MerchantUsersQueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *MerchantUsersQueryResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *MerchantUsersQueryResponse) GetUsers() []*InnerMerchantAccount {
	if m != nil {
		return m.Users
	}
	return nil
}

type MerchantUsersDeleteRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	Uid          uint32 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *MerchantUsersDeleteRequest) Reset()                    { *m = MerchantUsersDeleteRequest{} }
func (m *MerchantUsersDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantUsersDeleteRequest) ProtoMessage()               {}
func (*MerchantUsersDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *MerchantUsersDeleteRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantUsersDeleteRequest) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type MerchantUsersDeleteResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantUsersDeleteResponse) Reset()                    { *m = MerchantUsersDeleteResponse{} }
func (m *MerchantUsersDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantUsersDeleteResponse) ProtoMessage()               {}
func (*MerchantUsersDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *MerchantUsersDeleteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type InnerMerchantAccount struct {
	Role      uint32 `protobuf:"varint,1,opt,name=role" json:"role,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Cellphone string `protobuf:"bytes,3,opt,name=cellphone" json:"cellphone,omitempty"`
	Uid       uint32 `protobuf:"varint,4,opt,name=uid" json:"uid,omitempty"`
}

func (m *InnerMerchantAccount) Reset()                    { *m = InnerMerchantAccount{} }
func (m *InnerMerchantAccount) String() string            { return proto.CompactTextString(m) }
func (*InnerMerchantAccount) ProtoMessage()               {}
func (*InnerMerchantAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *InnerMerchantAccount) GetRole() uint32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *InnerMerchantAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InnerMerchantAccount) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *InnerMerchantAccount) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type MerchantInfoResponse struct {
	MerchantName    string                `protobuf:"bytes,1,opt,name=merchantName" json:"merchantName,omitempty"`
	MerchantID      uint32                `protobuf:"varint,3,opt,name=merchantID" json:"merchantID,omitempty"`
	MerchantAccount *InnerMerchantAccount `protobuf:"bytes,2,opt,name=merchantAccount" json:"merchantAccount,omitempty"`
}

func (m *MerchantInfoResponse) Reset()                    { *m = MerchantInfoResponse{} }
func (m *MerchantInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantInfoResponse) ProtoMessage()               {}
func (*MerchantInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *MerchantInfoResponse) GetMerchantName() string {
	if m != nil {
		return m.MerchantName
	}
	return ""
}

func (m *MerchantInfoResponse) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *MerchantInfoResponse) GetMerchantAccount() *InnerMerchantAccount {
	if m != nil {
		return m.MerchantAccount
	}
	return nil
}

type MerchantSendCodeRequest struct {
	Cellphone string `protobuf:"bytes,1,opt,name=cellphone" json:"cellphone,omitempty"`
	Scene     uint32 `protobuf:"varint,2,opt,name=scene" json:"scene,omitempty"`
}

func (m *MerchantSendCodeRequest) Reset()                    { *m = MerchantSendCodeRequest{} }
func (m *MerchantSendCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantSendCodeRequest) ProtoMessage()               {}
func (*MerchantSendCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *MerchantSendCodeRequest) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *MerchantSendCodeRequest) GetScene() uint32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

type MerchantSendCodeResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantSendCodeResponse) Reset()                    { *m = MerchantSendCodeResponse{} }
func (m *MerchantSendCodeResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantSendCodeResponse) ProtoMessage()               {}
func (*MerchantSendCodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *MerchantSendCodeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantVerifyCodeRequest struct {
	Cellphone string `protobuf:"bytes,1,opt,name=cellphone" json:"cellphone,omitempty"`
	Scene     uint32 `protobuf:"varint,2,opt,name=scene" json:"scene,omitempty"`
	SmsCode   string `protobuf:"bytes,3,opt,name=smsCode" json:"smsCode,omitempty"`
}

func (m *MerchantVerifyCodeRequest) Reset()                    { *m = MerchantVerifyCodeRequest{} }
func (m *MerchantVerifyCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantVerifyCodeRequest) ProtoMessage()               {}
func (*MerchantVerifyCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *MerchantVerifyCodeRequest) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *MerchantVerifyCodeRequest) GetScene() uint32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

func (m *MerchantVerifyCodeRequest) GetSmsCode() string {
	if m != nil {
		return m.SmsCode
	}
	return ""
}

type MerchantVerifyCodeResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantVerifyCodeResponse) Reset()                    { *m = MerchantVerifyCodeResponse{} }
func (m *MerchantVerifyCodeResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantVerifyCodeResponse) ProtoMessage()               {}
func (*MerchantVerifyCodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *MerchantVerifyCodeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantAccountCellphoneUnquieReqeuest struct {
	Cellphone string                                        `protobuf:"bytes,1,opt,name=cellphone" json:"cellphone,omitempty"`
	Roles     []MerchantAccountCellphoneUnquieReqeuest_Role `protobuf:"varint,2,rep,packed,name=roles,enum=Aphro.Merchant.pb.MerchantAccountCellphoneUnquieReqeuest_Role" json:"roles,omitempty"`
}

func (m *MerchantAccountCellphoneUnquieReqeuest) Reset() {
	*m = MerchantAccountCellphoneUnquieReqeuest{}
}
func (m *MerchantAccountCellphoneUnquieReqeuest) String() string { return proto.CompactTextString(m) }
func (*MerchantAccountCellphoneUnquieReqeuest) ProtoMessage()    {}
func (*MerchantAccountCellphoneUnquieReqeuest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{29}
}

func (m *MerchantAccountCellphoneUnquieReqeuest) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *MerchantAccountCellphoneUnquieReqeuest) GetRoles() []MerchantAccountCellphoneUnquieReqeuest_Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type MerchantAccountCellphoneUnquieResponse struct {
	IsExisted bool `protobuf:"varint,1,opt,name=isExisted" json:"isExisted,omitempty"`
}

func (m *MerchantAccountCellphoneUnquieResponse) Reset() {
	*m = MerchantAccountCellphoneUnquieResponse{}
}
func (m *MerchantAccountCellphoneUnquieResponse) String() string { return proto.CompactTextString(m) }
func (*MerchantAccountCellphoneUnquieResponse) ProtoMessage()    {}
func (*MerchantAccountCellphoneUnquieResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{30}
}

func (m *MerchantAccountCellphoneUnquieResponse) GetIsExisted() bool {
	if m != nil {
		return m.IsExisted
	}
	return false
}

func init() {
	proto.RegisterType((*MerchantWaiterQueryRequest)(nil), "Aphro.Merchant.pb.MerchantWaiterQueryRequest")
	proto.RegisterType((*MerchantWaiterQueryResponse)(nil), "Aphro.Merchant.pb.MerchantWaiterQueryResponse")
	proto.RegisterType((*MerchantWaiterQueryResponseInnerMerchantWaiterQueryResponse)(nil), "Aphro.Merchant.pb.MerchantWaiterQueryResponse.innerMerchantWaiterQueryResponse")
	proto.RegisterType((*MerchantWaiterCreateRequest)(nil), "Aphro.Merchant.pb.MerchantWaiterCreateRequest")
	proto.RegisterType((*MerchantWaiterCreateResponse)(nil), "Aphro.Merchant.pb.MerchantWaiterCreateResponse")
	proto.RegisterType((*MerchantWaiterDeleteRequest)(nil), "Aphro.Merchant.pb.MerchantWaiterDeleteRequest")
	proto.RegisterType((*MerchantWaiterDeleteResponse)(nil), "Aphro.Merchant.pb.MerchantWaiterDeleteResponse")
	proto.RegisterType((*MerchantRoomInfoRequest)(nil), "Aphro.Merchant.pb.MerchantRoomInfoRequest")
	proto.RegisterType((*MerchantRoomInfoResponse)(nil), "Aphro.Merchant.pb.MerchantRoomInfoResponse")
	proto.RegisterType((*MerchantOpenRequest)(nil), "Aphro.Merchant.pb.MerchantOpenRequest")
	proto.RegisterType((*MerchantOpenResponse)(nil), "Aphro.Merchant.pb.MerchantOpenResponse")
	proto.RegisterType((*MerchantRegisterRequest)(nil), "Aphro.Merchant.pb.MerchantRegisterRequest")
	proto.RegisterType((*MerchantRegisterResponse)(nil), "Aphro.Merchant.pb.MerchantRegisterResponse")
	proto.RegisterType((*MerchantChangePswRequest)(nil), "Aphro.Merchant.pb.MerchantChangePswRequest")
	proto.RegisterType((*MerchantChangePswResponse)(nil), "Aphro.Merchant.pb.MerchantChangePswResponse")
	proto.RegisterType((*MerchantLoginRequest)(nil), "Aphro.Merchant.pb.MerchantLoginRequest")
	proto.RegisterType((*MerchantLoginResponse)(nil), "Aphro.Merchant.pb.MerchantLoginResponse")
	proto.RegisterType((*MerchantInfoRequest)(nil), "Aphro.Merchant.pb.MerchantInfoRequest")
	proto.RegisterType((*MerchantUsersQueryRequest)(nil), "Aphro.Merchant.pb.MerchantUsersQueryRequest")
	proto.RegisterType((*MerchantUsersCreateRequest)(nil), "Aphro.Merchant.pb.MerchantUsersCreateRequest")
	proto.RegisterType((*MerchantUsersCreateResponse)(nil), "Aphro.Merchant.pb.MerchantUsersCreateResponse")
	proto.RegisterType((*MerchantUsersQueryResponse)(nil), "Aphro.Merchant.pb.MerchantUsersQueryResponse")
	proto.RegisterType((*MerchantUsersDeleteRequest)(nil), "Aphro.Merchant.pb.MerchantUsersDeleteRequest")
	proto.RegisterType((*MerchantUsersDeleteResponse)(nil), "Aphro.Merchant.pb.MerchantUsersDeleteResponse")
	proto.RegisterType((*InnerMerchantAccount)(nil), "Aphro.Merchant.pb.InnerMerchantAccount")
	proto.RegisterType((*MerchantInfoResponse)(nil), "Aphro.Merchant.pb.MerchantInfoResponse")
	proto.RegisterType((*MerchantSendCodeRequest)(nil), "Aphro.Merchant.pb.MerchantSendCodeRequest")
	proto.RegisterType((*MerchantSendCodeResponse)(nil), "Aphro.Merchant.pb.MerchantSendCodeResponse")
	proto.RegisterType((*MerchantVerifyCodeRequest)(nil), "Aphro.Merchant.pb.MerchantVerifyCodeRequest")
	proto.RegisterType((*MerchantVerifyCodeResponse)(nil), "Aphro.Merchant.pb.MerchantVerifyCodeResponse")
	proto.RegisterType((*MerchantAccountCellphoneUnquieReqeuest)(nil), "Aphro.Merchant.pb.MerchantAccountCellphoneUnquieReqeuest")
	proto.RegisterType((*MerchantAccountCellphoneUnquieResponse)(nil), "Aphro.Merchant.pb.MerchantAccountCellphoneUnquieResponse")
	proto.RegisterEnum("Aphro.Merchant.pb.MerchantAccountCellphoneUnquieReqeuest_Role", MerchantAccountCellphoneUnquieReqeuest_Role_name, MerchantAccountCellphoneUnquieReqeuest_Role_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MerchantService service

type MerchantServiceClient interface {
	// 商户开户
	MerchantOpen(ctx context.Context, in *MerchantOpenRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户用户注册
	MerchantRegister(ctx context.Context, in *MerchantRegisterRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户用户修改密码
	MerchantChangePsw(ctx context.Context, in *MerchantChangePswRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户app登陆
	MerchantLogin(ctx context.Context, in *MerchantLoginRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户下的手机号是否唯一
	MerchantAccountCellphoneUnquie(ctx context.Context, in *MerchantAccountCellphoneUnquieReqeuest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户app 信息
	MerchantInfo(ctx context.Context, in *MerchantInfoRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 添加员工
	MerchantUsersCreate(ctx context.Context, in *MerchantUsersCreateRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 查询商户下的所有的用户
	MerchantUsersQuery(ctx context.Context, in *MerchantUsersQueryRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 删除商户下的指定的用户
	MerchantUsersDelete(ctx context.Context, in *MerchantUsersDeleteRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户app 信息
	MerchantRoomInfo(ctx context.Context, in *MerchantRoomInfoRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 查询商户服务信息
	MerchantWaiterQuery(ctx context.Context, in *MerchantWaiterQueryRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 新增商户服务信息
	MerchantWaiterCreate(ctx context.Context, in *MerchantWaiterCreateRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 删除商户服务信息
	MerchantWaiterDelete(ctx context.Context, in *MerchantWaiterDeleteRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 短信验证码 验证接口
	MerchantVerifyCode(ctx context.Context, in *MerchantVerifyCodeRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 短信验证码 发送接口
	MerchantSendCode(ctx context.Context, in *MerchantSendCodeRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
}

type merchantServiceClient struct {
	cc *grpc.ClientConn
}

func NewMerchantServiceClient(cc *grpc.ClientConn) MerchantServiceClient {
	return &merchantServiceClient{cc}
}

func (c *merchantServiceClient) MerchantOpen(ctx context.Context, in *MerchantOpenRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantOpen", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantRegister(ctx context.Context, in *MerchantRegisterRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantRegister", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantChangePsw(ctx context.Context, in *MerchantChangePswRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantChangePsw", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantLogin(ctx context.Context, in *MerchantLoginRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantAccountCellphoneUnquie(ctx context.Context, in *MerchantAccountCellphoneUnquieReqeuest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantAccountCellphoneUnquie", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantInfo(ctx context.Context, in *MerchantInfoRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantUsersCreate(ctx context.Context, in *MerchantUsersCreateRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantUsersCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantUsersQuery(ctx context.Context, in *MerchantUsersQueryRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantUsersQuery", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantUsersDelete(ctx context.Context, in *MerchantUsersDeleteRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantUsersDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantRoomInfo(ctx context.Context, in *MerchantRoomInfoRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantRoomInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantWaiterQuery(ctx context.Context, in *MerchantWaiterQueryRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantWaiterQuery", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantWaiterCreate(ctx context.Context, in *MerchantWaiterCreateRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantWaiterCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantWaiterDelete(ctx context.Context, in *MerchantWaiterDeleteRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantWaiterDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantVerifyCode(ctx context.Context, in *MerchantVerifyCodeRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantVerifyCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantSendCode(ctx context.Context, in *MerchantSendCodeRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantSendCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MerchantService service

type MerchantServiceServer interface {
	// 商户开户
	MerchantOpen(context.Context, *MerchantOpenRequest) (*Aphro_CommonBiz.Response, error)
	// 商户用户注册
	MerchantRegister(context.Context, *MerchantRegisterRequest) (*Aphro_CommonBiz.Response, error)
	// 商户用户修改密码
	MerchantChangePsw(context.Context, *MerchantChangePswRequest) (*Aphro_CommonBiz.Response, error)
	// 商户app登陆
	MerchantLogin(context.Context, *MerchantLoginRequest) (*Aphro_CommonBiz.Response, error)
	// 商户下的手机号是否唯一
	MerchantAccountCellphoneUnquie(context.Context, *MerchantAccountCellphoneUnquieReqeuest) (*Aphro_CommonBiz.Response, error)
	// 商户app 信息
	MerchantInfo(context.Context, *MerchantInfoRequest) (*Aphro_CommonBiz.Response, error)
	// 添加员工
	MerchantUsersCreate(context.Context, *MerchantUsersCreateRequest) (*Aphro_CommonBiz.Response, error)
	// 查询商户下的所有的用户
	MerchantUsersQuery(context.Context, *MerchantUsersQueryRequest) (*Aphro_CommonBiz.Response, error)
	// 删除商户下的指定的用户
	MerchantUsersDelete(context.Context, *MerchantUsersDeleteRequest) (*Aphro_CommonBiz.Response, error)
	// 商户app 信息
	MerchantRoomInfo(context.Context, *MerchantRoomInfoRequest) (*Aphro_CommonBiz.Response, error)
	// 查询商户服务信息
	MerchantWaiterQuery(context.Context, *MerchantWaiterQueryRequest) (*Aphro_CommonBiz.Response, error)
	// 新增商户服务信息
	MerchantWaiterCreate(context.Context, *MerchantWaiterCreateRequest) (*Aphro_CommonBiz.Response, error)
	// 删除商户服务信息
	MerchantWaiterDelete(context.Context, *MerchantWaiterDeleteRequest) (*Aphro_CommonBiz.Response, error)
	// 短信验证码 验证接口
	MerchantVerifyCode(context.Context, *MerchantVerifyCodeRequest) (*Aphro_CommonBiz.Response, error)
	// 短信验证码 发送接口
	MerchantSendCode(context.Context, *MerchantSendCodeRequest) (*Aphro_CommonBiz.Response, error)
}

func RegisterMerchantServiceServer(s *grpc.Server, srv MerchantServiceServer) {
	s.RegisterService(&_MerchantService_serviceDesc, srv)
}

func _MerchantService_MerchantOpen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantOpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantOpen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantOpen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantOpen(ctx, req.(*MerchantOpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantRegister(ctx, req.(*MerchantRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantChangePsw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantChangePswRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantChangePsw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantChangePsw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantChangePsw(ctx, req.(*MerchantChangePswRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantLogin(ctx, req.(*MerchantLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantAccountCellphoneUnquie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantAccountCellphoneUnquieReqeuest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantAccountCellphoneUnquie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantAccountCellphoneUnquie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantAccountCellphoneUnquie(ctx, req.(*MerchantAccountCellphoneUnquieReqeuest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantInfo(ctx, req.(*MerchantInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantUsersCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantUsersCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantUsersCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantUsersCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantUsersCreate(ctx, req.(*MerchantUsersCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantUsersQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantUsersQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantUsersQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantUsersQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantUsersQuery(ctx, req.(*MerchantUsersQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantUsersDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantUsersDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantUsersDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantUsersDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantUsersDelete(ctx, req.(*MerchantUsersDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantRoomInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantRoomInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantRoomInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantRoomInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantRoomInfo(ctx, req.(*MerchantRoomInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantWaiterQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantWaiterQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantWaiterQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantWaiterQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantWaiterQuery(ctx, req.(*MerchantWaiterQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantWaiterCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantWaiterCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantWaiterCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantWaiterCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantWaiterCreate(ctx, req.(*MerchantWaiterCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantWaiterDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantWaiterDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantWaiterDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantWaiterDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantWaiterDelete(ctx, req.(*MerchantWaiterDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantVerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantVerifyCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantVerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantVerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantVerifyCode(ctx, req.(*MerchantVerifyCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantSendCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantSendCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantSendCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantSendCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantSendCode(ctx, req.(*MerchantSendCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MerchantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Aphro.Merchant.pb.MerchantService",
	HandlerType: (*MerchantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "merchantOpen",
			Handler:    _MerchantService_MerchantOpen_Handler,
		},
		{
			MethodName: "merchantRegister",
			Handler:    _MerchantService_MerchantRegister_Handler,
		},
		{
			MethodName: "merchantChangePsw",
			Handler:    _MerchantService_MerchantChangePsw_Handler,
		},
		{
			MethodName: "merchantLogin",
			Handler:    _MerchantService_MerchantLogin_Handler,
		},
		{
			MethodName: "merchantAccountCellphoneUnquie",
			Handler:    _MerchantService_MerchantAccountCellphoneUnquie_Handler,
		},
		{
			MethodName: "merchantInfo",
			Handler:    _MerchantService_MerchantInfo_Handler,
		},
		{
			MethodName: "merchantUsersCreate",
			Handler:    _MerchantService_MerchantUsersCreate_Handler,
		},
		{
			MethodName: "merchantUsersQuery",
			Handler:    _MerchantService_MerchantUsersQuery_Handler,
		},
		{
			MethodName: "merchantUsersDelete",
			Handler:    _MerchantService_MerchantUsersDelete_Handler,
		},
		{
			MethodName: "merchantRoomInfo",
			Handler:    _MerchantService_MerchantRoomInfo_Handler,
		},
		{
			MethodName: "merchantWaiterQuery",
			Handler:    _MerchantService_MerchantWaiterQuery_Handler,
		},
		{
			MethodName: "merchantWaiterCreate",
			Handler:    _MerchantService_MerchantWaiterCreate_Handler,
		},
		{
			MethodName: "merchantWaiterDelete",
			Handler:    _MerchantService_MerchantWaiterDelete_Handler,
		},
		{
			MethodName: "merchantVerifyCode",
			Handler:    _MerchantService_MerchantVerifyCode_Handler,
		},
		{
			MethodName: "merchantSendCode",
			Handler:    _MerchantService_MerchantSendCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "merchant.proto",
}

func init() { proto.RegisterFile("merchant.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcb, 0x6e, 0xdc, 0x36,
	0x17, 0xfe, 0x35, 0x63, 0x27, 0x0e, 0x7f, 0x4f, 0x6c, 0xd3, 0x93, 0x78, 0x3c, 0x71, 0x1d, 0x97,
	0x40, 0x93, 0xc0, 0x6d, 0x47, 0xb1, 0x9b, 0xde, 0x02, 0xf4, 0xe2, 0x4b, 0x0b, 0x18, 0x68, 0xea,
	0x44, 0xb5, 0x7b, 0x59, 0x74, 0x21, 0x6b, 0xe8, 0xb1, 0x90, 0x11, 0x29, 0x93, 0x1a, 0x27, 0x4e,
	0xd0, 0x16, 0x0d, 0xd0, 0x55, 0x97, 0x5d, 0x77, 0x5b, 0xa0, 0x8b, 0xae, 0xfb, 0x10, 0x5d, 0x74,
	0xd1, 0x57, 0xe8, 0x83, 0x14, 0xa4, 0xa4, 0x21, 0x45, 0x4d, 0xa8, 0x99, 0x14, 0xe8, 0x6a, 0x44,
	0x8e, 0xce, 0xf9, 0xbe, 0x73, 0xe1, 0x39, 0x87, 0x02, 0x97, 0x23, 0xcc, 0x82, 0x13, 0x9f, 0x24,
	0x9d, 0x98, 0xd1, 0x84, 0xc2, 0x85, 0xad, 0xf8, 0x84, 0xd1, 0xce, 0xbd, 0xe1, 0xee, 0x51, 0x7b,
	0xa5, 0x47, 0x69, 0xaf, 0x8f, 0x5d, 0x3f, 0x0e, 0x5d, 0x9f, 0x10, 0x9a, 0xf8, 0x49, 0x48, 0x09,
	0x4f, 0x05, 0xda, 0x5b, 0xbd, 0x30, 0x39, 0x19, 0x1c, 0x75, 0x02, 0x1a, 0xb9, 0x7d, 0x3f, 0x8a,
	0x7d, 0xd6, 0xdd, 0xb8, 0xbd, 0x71, 0xc7, 0xf5, 0x85, 0x1e, 0x77, 0x87, 0x46, 0x11, 0x25, 0xdb,
	0xe1, 0x13, 0xd7, 0xc3, 0x3c, 0xa6, 0x84, 0x63, 0xf7, 0xfe, 0xb6, 0xcb, 0xb2, 0xe7, 0x54, 0x05,
	0xfa, 0x10, 0xb4, 0x73, 0xbc, 0x2f, 0xfc, 0x30, 0xc1, 0xec, 0xc1, 0x00, 0xb3, 0x73, 0x0f, 0x9f,
	0x0e, 0x30, 0x4f, 0x20, 0x02, 0xb3, 0x1c, 0x73, 0x1e, 0x52, 0x72, 0x40, 0x1f, 0x62, 0xd2, 0x72,
	0xd6, 0x9c, 0x5b, 0x97, 0xbc, 0xc2, 0x1e, 0xfa, 0xa3, 0x06, 0xae, 0x8d, 0x54, 0x91, 0xe2, 0xc0,
	0x16, 0xb8, 0xc8, 0x07, 0x41, 0x80, 0x39, 0x97, 0xe2, 0x33, 0x5e, 0xbe, 0x84, 0x21, 0xb8, 0xf8,
	0x48, 0x0a, 0xf0, 0x56, 0x6d, 0xad, 0x7e, 0xeb, 0xff, 0x9b, 0xfb, 0x9d, 0x92, 0x07, 0x3a, 0x16,
	0xd5, 0x9d, 0x90, 0x10, 0xcc, 0x2c, 0x2f, 0x78, 0xb9, 0xfe, 0xf6, 0x2f, 0x0e, 0x58, 0xab, 0x7a,
	0x1b, 0xb6, 0xc1, 0x4c, 0xfa, 0x7e, 0xd8, 0x95, 0x54, 0x1b, 0xde, 0x70, 0x0d, 0x57, 0x01, 0xc8,
	0xa3, 0xb5, 0xb7, 0xdb, 0xaa, 0x49, 0x3f, 0x68, 0x3b, 0x10, 0x82, 0x29, 0xe2, 0x47, 0xb8, 0x55,
	0x97, 0xff, 0xc8, 0x67, 0x61, 0x79, 0x40, 0x49, 0x82, 0x49, 0xd2, 0x9a, 0x96, 0xdb, 0xf9, 0x52,
	0xfc, 0xc3, 0x30, 0xc7, 0xec, 0x0c, 0xb7, 0xa6, 0xd2, 0x7f, 0xb2, 0x25, 0xfa, 0xd5, 0x31, 0xbd,
	0xb9, 0xc3, 0xb0, 0x9f, 0xe0, 0x09, 0x22, 0xf2, 0x9f, 0x71, 0x3d, 0x00, 0x2b, 0xa3, 0xa9, 0x56,
	0x46, 0x5e, 0xf7, 0x74, 0xad, 0xe8, 0x69, 0xf4, 0xb5, 0xe9, 0x80, 0x5d, 0xdc, 0xc7, 0x93, 0x39,
	0xc0, 0x54, 0x3f, 0xa5, 0xa9, 0x7f, 0xc7, 0x24, 0x9d, 0xab, 0xaf, 0x22, 0x8d, 0x0e, 0xc1, 0x52,
	0x2e, 0xe9, 0x51, 0x1a, 0xed, 0x91, 0x63, 0x3a, 0x09, 0xa9, 0xab, 0xe0, 0x02, 0x13, 0x62, 0xbb,
	0x99, 0xc5, 0xd9, 0x0a, 0xdd, 0x01, 0xad, 0xb2, 0x5a, 0x45, 0x86, 0xe1, 0x33, 0xcc, 0x38, 0xce,
	0x54, 0xe6, 0x4b, 0xf4, 0xbd, 0x03, 0x16, 0x73, 0xb1, 0xfd, 0x18, 0x93, 0x9c, 0x49, 0x1e, 0x5b,
	0x47, 0x8b, 0xed, 0x0a, 0xb8, 0x14, 0xe0, 0x7e, 0x3f, 0x3e, 0xa1, 0x04, 0x67, 0xe9, 0xa0, 0x36,
	0x04, 0x86, 0xdf, 0xed, 0x32, 0x61, 0x70, 0x9a, 0x10, 0xf9, 0x52, 0xe4, 0x51, 0xec, 0x9f, 0x47,
	0x98, 0x24, 0xdb, 0x61, 0x22, 0x83, 0xdf, 0xf0, 0xb4, 0x1d, 0x74, 0x1b, 0x34, 0x8b, 0x14, 0x2a,
	0x5d, 0xf8, 0xbb, 0xa3, 0xf9, 0x10, 0xf7, 0x42, 0x9e, 0x60, 0x96, 0x33, 0x9f, 0x07, 0xf5, 0x87,
	0xf8, 0x3c, 0x23, 0x2e, 0x1e, 0x87, 0xb6, 0xd4, 0x34, 0x5b, 0x56, 0x01, 0x38, 0xc3, 0x2c, 0x3c,
	0x3e, 0xdf, 0xa1, 0xdd, 0x3c, 0x83, 0xb5, 0x1d, 0x21, 0xc3, 0x68, 0x1f, 0xcb, 0x24, 0x6e, 0x78,
	0xf2, 0xd9, 0x38, 0x0f, 0x17, 0x52, 0x3b, 0xb4, 0xf3, 0x80, 0xc0, 0x6c, 0x22, 0x42, 0x94, 0x31,
	0x69, 0x5d, 0x4c, 0xa3, 0xa7, 0xef, 0xa1, 0x2f, 0xb5, 0x28, 0x0d, 0x89, 0x57, 0xe6, 0xb9, 0x99,
	0x17, 0xb5, 0x11, 0xf5, 0x33, 0x56, 0x9a, 0x77, 0x4e, 0x7c, 0xd2, 0xc3, 0xf7, 0xf9, 0xa3, 0xe7,
	0xfb, 0x64, 0x0c, 0x8d, 0x55, 0x3e, 0x42, 0x6f, 0x82, 0xe5, 0x11, 0x88, 0x95, 0xc1, 0x8b, 0x55,
	0xb8, 0x3f, 0xa1, 0xbd, 0x90, 0x58, 0x49, 0x16, 0x1c, 0x5a, 0x2b, 0x3b, 0xb4, 0x64, 0x48, 0x7d,
	0x84, 0x6b, 0x0e, 0xc1, 0x15, 0x03, 0x31, 0x23, 0x39, 0xce, 0x79, 0xd3, 0x0c, 0xa9, 0x15, 0x0d,
	0xf9, 0x4a, 0x1d, 0x9d, 0x49, 0x0f, 0x71, 0x45, 0x69, 0x45, 0x1f, 0x28, 0xd7, 0x1e, 0x72, 0xcc,
	0xf8, 0xc4, 0xdd, 0xf4, 0x58, 0xf5, 0x63, 0xa9, 0xa0, 0x58, 0xfd, 0xc7, 0x3b, 0x23, 0xe3, 0xb8,
	0x76, 0x4f, 0x55, 0xd9, 0x02, 0x4e, 0x65, 0x4a, 0xcf, 0x83, 0xfa, 0x60, 0x58, 0xb5, 0xc5, 0x23,
	0x1a, 0x18, 0x94, 0xc7, 0x6d, 0xff, 0xef, 0x81, 0xe9, 0x01, 0x57, 0xcd, 0xff, 0xe6, 0x88, 0xe6,
	0xbf, 0xa7, 0xb7, 0xec, 0xad, 0x20, 0xa0, 0x03, 0x92, 0x78, 0xa9, 0x14, 0xf2, 0x0c, 0xd8, 0xc9,
	0xdb, 0x44, 0xd9, 0x94, 0xb7, 0x0d, 0xaf, 0x8c, 0xdd, 0x1b, 0x08, 0x68, 0x8e, 0xe2, 0x3a, 0x2c,
	0x47, 0x8e, 0x56, 0x8e, 0x46, 0x85, 0xac, 0x50, 0xa2, 0xeb, 0x66, 0x89, 0xce, 0x88, 0x4e, 0x29,
	0xa2, 0xbf, 0x39, 0xea, 0x30, 0x16, 0x3a, 0x06, 0x02, 0xb3, 0x79, 0x3a, 0x7e, 0xaa, 0xfa, 0x40,
	0x61, 0xcf, 0x48, 0xe2, 0x7a, 0xa9, 0x1e, 0x3e, 0x00, 0x73, 0x51, 0xd1, 0x0e, 0xc9, 0x75, 0x82,
	0x10, 0x99, 0xf2, 0xe8, 0x9e, 0xaa, 0xfb, 0x9f, 0x61, 0xd2, 0x15, 0x65, 0x28, 0x8f, 0x54, 0xc1,
	0x74, 0xc7, 0x34, 0xbd, 0x09, 0xa6, 0x79, 0x80, 0xb3, 0xbe, 0xd5, 0xf0, 0xd2, 0x85, 0xde, 0x33,
	0x95, 0xba, 0xca, 0x20, 0x85, 0xea, 0x70, 0x7e, 0x3e, 0xac, 0x86, 0xff, 0x82, 0x86, 0x84, 0x8a,
	0xb8, 0x56, 0x65, 0xf3, 0x25, 0x7a, 0x4b, 0x25, 0xa7, 0x0e, 0x55, 0x49, 0xf1, 0x4f, 0x07, 0xdc,
	0x30, 0x9c, 0xb9, 0x93, 0x93, 0x38, 0x24, 0xa7, 0x83, 0x50, 0xf0, 0xc5, 0x63, 0x10, 0x3e, 0x00,
	0xd3, 0x22, 0xd9, 0xd2, 0xc3, 0x75, 0x79, 0xf3, 0x7d, 0xcb, 0x64, 0x6d, 0xc7, 0xe9, 0x78, 0xb4,
	0x8f, 0xbd, 0x54, 0x19, 0xda, 0x00, 0x53, 0x62, 0x09, 0x67, 0xc4, 0x2f, 0x4d, 0xe6, 0xff, 0x07,
	0x17, 0x40, 0x63, 0xab, 0x1b, 0x85, 0x24, 0xe4, 0x09, 0xf3, 0x13, 0xca, 0xe6, 0x1d, 0x38, 0x0b,
	0x66, 0xf6, 0x63, 0x9c, 0xae, 0x6a, 0xe8, 0xe3, 0x6a, 0x83, 0x32, 0xaf, 0xac, 0x80, 0x4b, 0x21,
	0xff, 0xe8, 0xb1, 0xe8, 0xad, 0xdd, 0xcc, 0x2f, 0x6a, 0x63, 0xf3, 0xc7, 0x39, 0x30, 0xa7, 0x62,
	0xce, 0xce, 0xc2, 0x00, 0xc3, 0xbe, 0x4a, 0x76, 0x31, 0x80, 0xc0, 0x1b, 0x16, 0x2b, 0xb5, 0x21,
	0xa9, 0xbd, 0x9c, 0xbd, 0x37, 0xbc, 0x21, 0x75, 0x72, 0x12, 0x68, 0xf9, 0xd9, 0x5f, 0x7f, 0xff,
	0x54, 0x5b, 0x44, 0x97, 0xdd, 0x5c, 0xb3, 0x4b, 0x63, 0x4c, 0xee, 0x3a, 0xeb, 0xf0, 0x31, 0x98,
	0x8f, 0x8c, 0x11, 0x00, 0xae, 0x5b, 0x10, 0x8d, 0x01, 0xc7, 0x86, 0xfa, 0x92, 0x44, 0x5d, 0x42,
	0x50, 0xa1, 0xb2, 0x4c, 0x5a, 0x20, 0x3f, 0x05, 0x0b, 0x91, 0xd9, 0xb0, 0xe1, 0xab, 0x16, 0x68,
	0x73, 0x90, 0xb0, 0x61, 0xaf, 0x4a, 0xec, 0x16, 0x5a, 0x54, 0xd8, 0x41, 0x2e, 0x2e, 0xc0, 0x29,
	0x68, 0x44, 0x7a, 0x13, 0x86, 0x37, 0x2d, 0xc0, 0xfa, 0x60, 0x60, 0x03, 0x6d, 0x4b, 0xd0, 0x26,
	0x9a, 0x53, 0xa0, 0x7d, 0x21, 0x2a, 0x00, 0x7f, 0x76, 0xc0, 0x6a, 0x64, 0x4d, 0x19, 0xf8, 0xee,
	0x0b, 0xa7, 0xb3, 0x8d, 0xd4, 0x2b, 0x92, 0xd4, 0x75, 0xd4, 0x56, 0xa4, 0xfc, 0x54, 0x99, 0x1b,
	0xf2, 0x43, 0x12, 0x9e, 0x0e, 0xb0, 0xe0, 0xa7, 0x65, 0x9d, 0x28, 0xbd, 0xd6, 0xac, 0xd3, 0xe6,
	0x8b, 0x09, 0xb3, 0x2e, 0x24, 0xc7, 0x54, 0xa0, 0x3d, 0x73, 0xc0, 0x62, 0x54, 0xee, 0xd4, 0xf0,
	0x75, 0x0b, 0x6a, 0x79, 0x72, 0xb0, 0x81, 0xbf, 0x2c, 0xc1, 0xaf, 0xa1, 0xab, 0x0a, 0x5c, 0x76,
	0x58, 0x37, 0x90, 0x1a, 0x04, 0x89, 0xef, 0x00, 0x8c, 0x4a, 0x2d, 0x1e, 0xbe, 0x56, 0x45, 0x41,
	0x9f, 0x7e, 0x6c, 0x0c, 0xd6, 0x24, 0x83, 0x36, 0xba, 0x62, 0x32, 0x38, 0x15, 0x0a, 0x46, 0x7a,
	0x21, 0xed, 0xcc, 0xd5, 0x5e, 0x28, 0x4c, 0x05, 0x2f, 0xe4, 0x85, 0xae, 0xd4, 0x20, 0x48, 0x3c,
	0xd1, 0x0a, 0x40, 0x76, 0x53, 0xb3, 0x17, 0x80, 0xe2, 0x2d, 0xd1, 0x86, 0x7e, 0x5d, 0xa2, 0x2f,
	0xc3, 0x25, 0xad, 0x00, 0x50, 0x1a, 0xb9, 0x4f, 0xd3, 0x4b, 0xe2, 0x37, 0x05, 0x07, 0x68, 0xdf,
	0x2e, 0xac, 0x0e, 0x28, 0x7f, 0xd0, 0x99, 0xd0, 0x01, 0xe9, 0xa5, 0x59, 0x45, 0xe1, 0x07, 0x07,
	0x34, 0xa3, 0x11, 0x37, 0x7e, 0xd8, 0xa9, 0x64, 0x31, 0x76, 0x36, 0x22, 0x49, 0x63, 0x05, 0x2d,
	0x95, 0x68, 0xa8, 0x74, 0x2c, 0xf3, 0xc8, 0xd2, 0xa1, 0x9a, 0xc7, 0xd8, 0xf9, 0xf0, 0x7c, 0x1e,
	0x2a, 0x21, 0xbe, 0x55, 0xc7, 0x42, 0x75, 0x79, 0xeb, 0xb1, 0x28, 0xcd, 0x1d, 0x63, 0x24, 0x05,
	0x6a, 0x2a, 0x0a, 0xea, 0x16, 0x67, 0x74, 0xa4, 0x7c, 0x0c, 0xb2, 0x26, 0xa4, 0x31, 0x7a, 0x4d,
	0xd8, 0x91, 0x78, 0x26, 0x7d, 0xd7, 0x59, 0x3f, 0xba, 0x20, 0xbf, 0x1e, 0xbe, 0xf1, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x4b, 0xcd, 0x62, 0x98, 0xc3, 0x14, 0x00, 0x00,
}
