// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merchant.proto

/*
Package Aphro_Merchant_pb is a generated protocol buffer package.

It is generated from these files:
	merchant.proto

It has these top-level messages:
	MerchantWaiterCreateRequest
	MerchantWaiterCreateResponse
	MerchantWaiterDeleteRequest
	MerchantWaiterDeleteResponse
	MerchantRoomInfoRequest
	MerchantRoomInfoResponse
	MerchantOpenRequest
	MerchantOpenResponse
	MerchantRegisterRequest
	MerchantRegisterResponse
	MerchantChangePswRequest
	MerchantChangePswResponse
	MerchantLoginRequest
	MerchantLoginResponse
	MerchantInfoRequest
	InnerMerchantAccount
	MerchantInfoResponse
	MerchantSendCodeRequest
	MerchantSendCodeResponse
	MerchantVerifyCodeRequest
	MerchantVerifyCodeResponse
	MerchantAccountCellphoneUnquieReqeuest
	MerchantAccountCellphoneUnquieResponse
*/
package Aphro_Merchant_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import Aphro_CommonBiz "github.com/lampard1014/aphro/CommonBiz/Response/PB"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MerchantWaiterCreateRequest struct {
	Token      string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	MerchantID string `protobuf:"bytes,2,opt,name=merchantID" json:"merchantID,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Reserve    string `protobuf:"bytes,4,opt,name=reserve" json:"reserve,omitempty"`
}

func (m *MerchantWaiterCreateRequest) Reset()                    { *m = MerchantWaiterCreateRequest{} }
func (m *MerchantWaiterCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterCreateRequest) ProtoMessage()               {}
func (*MerchantWaiterCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MerchantWaiterCreateRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MerchantWaiterCreateRequest) GetMerchantID() string {
	if m != nil {
		return m.MerchantID
	}
	return ""
}

func (m *MerchantWaiterCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantWaiterCreateRequest) GetReserve() string {
	if m != nil {
		return m.Reserve
	}
	return ""
}

type MerchantWaiterCreateResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantWaiterCreateResponse) Reset()                    { *m = MerchantWaiterCreateResponse{} }
func (m *MerchantWaiterCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterCreateResponse) ProtoMessage()               {}
func (*MerchantWaiterCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MerchantWaiterCreateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantWaiterDeleteRequest struct {
	Token    string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Waiterid uint64 `protobuf:"varint,2,opt,name=waiterid" json:"waiterid,omitempty"`
}

func (m *MerchantWaiterDeleteRequest) Reset()                    { *m = MerchantWaiterDeleteRequest{} }
func (m *MerchantWaiterDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterDeleteRequest) ProtoMessage()               {}
func (*MerchantWaiterDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MerchantWaiterDeleteRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MerchantWaiterDeleteRequest) GetWaiterid() uint64 {
	if m != nil {
		return m.Waiterid
	}
	return 0
}

type MerchantWaiterDeleteResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantWaiterDeleteResponse) Reset()                    { *m = MerchantWaiterDeleteResponse{} }
func (m *MerchantWaiterDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantWaiterDeleteResponse) ProtoMessage()               {}
func (*MerchantWaiterDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MerchantWaiterDeleteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantRoomInfoRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	RoomID       uint32 `protobuf:"varint,2,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *MerchantRoomInfoRequest) Reset()                    { *m = MerchantRoomInfoRequest{} }
func (m *MerchantRoomInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantRoomInfoRequest) ProtoMessage()               {}
func (*MerchantRoomInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MerchantRoomInfoRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantRoomInfoRequest) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type MerchantRoomInfoResponse struct {
	Reverse string `protobuf:"bytes,1,opt,name=reverse" json:"reverse,omitempty"`
}

func (m *MerchantRoomInfoResponse) Reset()                    { *m = MerchantRoomInfoResponse{} }
func (m *MerchantRoomInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantRoomInfoResponse) ProtoMessage()               {}
func (*MerchantRoomInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MerchantRoomInfoResponse) GetReverse() string {
	if m != nil {
		return m.Reverse
	}
	return ""
}

type MerchantOpenRequest struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Cellphone  string `protobuf:"bytes,2,opt,name=cellphone" json:"cellphone,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	PaymentBit uint32 `protobuf:"varint,4,opt,name=paymentBit" json:"paymentBit,omitempty"`
}

func (m *MerchantOpenRequest) Reset()                    { *m = MerchantOpenRequest{} }
func (m *MerchantOpenRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantOpenRequest) ProtoMessage()               {}
func (*MerchantOpenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MerchantOpenRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantOpenRequest) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *MerchantOpenRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MerchantOpenRequest) GetPaymentBit() uint32 {
	if m != nil {
		return m.PaymentBit
	}
	return 0
}

type MerchantOpenResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantOpenResponse) Reset()                    { *m = MerchantOpenResponse{} }
func (m *MerchantOpenResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantOpenResponse) ProtoMessage()               {}
func (*MerchantOpenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MerchantOpenResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantRegisterRequest struct {
	Key        string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	VerifyCode string `protobuf:"bytes,3,opt,name=verifyCode" json:"verifyCode,omitempty"`
	Role       uint32 `protobuf:"varint,5,opt,name=role" json:"role,omitempty"`
	MerchantID uint32 `protobuf:"varint,6,opt,name=merchantID" json:"merchantID,omitempty"`
}

func (m *MerchantRegisterRequest) Reset()                    { *m = MerchantRegisterRequest{} }
func (m *MerchantRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantRegisterRequest) ProtoMessage()               {}
func (*MerchantRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MerchantRegisterRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MerchantRegisterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantRegisterRequest) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

func (m *MerchantRegisterRequest) GetRole() uint32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *MerchantRegisterRequest) GetMerchantID() uint32 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

type MerchantRegisterResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantRegisterResponse) Reset()                    { *m = MerchantRegisterResponse{} }
func (m *MerchantRegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantRegisterResponse) ProtoMessage()               {}
func (*MerchantRegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MerchantRegisterResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantChangePswRequest struct {
	Key          string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken" json:"sessionToken,omitempty"`
	VerifyCode   string `protobuf:"bytes,3,opt,name=verifyCode" json:"verifyCode,omitempty"`
}

func (m *MerchantChangePswRequest) Reset()                    { *m = MerchantChangePswRequest{} }
func (m *MerchantChangePswRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantChangePswRequest) ProtoMessage()               {}
func (*MerchantChangePswRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MerchantChangePswRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MerchantChangePswRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantChangePswRequest) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

type MerchantChangePswResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantChangePswResponse) Reset()                    { *m = MerchantChangePswResponse{} }
func (m *MerchantChangePswResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantChangePswResponse) ProtoMessage()               {}
func (*MerchantChangePswResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *MerchantChangePswResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantLoginRequest struct {
	Key          string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	TokenRequest string `protobuf:"bytes,2,opt,name=tokenRequest" json:"tokenRequest,omitempty"`
	SessionToken string `protobuf:"bytes,3,opt,name=sessionToken" json:"sessionToken,omitempty"`
}

func (m *MerchantLoginRequest) Reset()                    { *m = MerchantLoginRequest{} }
func (m *MerchantLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantLoginRequest) ProtoMessage()               {}
func (*MerchantLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *MerchantLoginRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MerchantLoginRequest) GetTokenRequest() string {
	if m != nil {
		return m.TokenRequest
	}
	return ""
}

func (m *MerchantLoginRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type MerchantLoginResponse struct {
	SessionToken string `protobuf:"bytes,1,opt,name=sessionToken" json:"sessionToken,omitempty"`
	Success      bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantLoginResponse) Reset()                    { *m = MerchantLoginResponse{} }
func (m *MerchantLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantLoginResponse) ProtoMessage()               {}
func (*MerchantLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *MerchantLoginResponse) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MerchantLoginResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantInfoRequest struct {
	Token      string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	MerchantID string `protobuf:"bytes,2,opt,name=merchantID" json:"merchantID,omitempty"`
}

func (m *MerchantInfoRequest) Reset()                    { *m = MerchantInfoRequest{} }
func (m *MerchantInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantInfoRequest) ProtoMessage()               {}
func (*MerchantInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *MerchantInfoRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MerchantInfoRequest) GetMerchantID() string {
	if m != nil {
		return m.MerchantID
	}
	return ""
}

type InnerMerchantAccount struct {
	Role uint32 `protobuf:"varint,1,opt,name=role" json:"role,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *InnerMerchantAccount) Reset()                    { *m = InnerMerchantAccount{} }
func (m *InnerMerchantAccount) String() string            { return proto.CompactTextString(m) }
func (*InnerMerchantAccount) ProtoMessage()               {}
func (*InnerMerchantAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *InnerMerchantAccount) GetRole() uint32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *InnerMerchantAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MerchantInfoResponse struct {
	MerchantName    string                `protobuf:"bytes,1,opt,name=merchantName" json:"merchantName,omitempty"`
	MerchantAccount *InnerMerchantAccount `protobuf:"bytes,2,opt,name=merchantAccount" json:"merchantAccount,omitempty"`
}

func (m *MerchantInfoResponse) Reset()                    { *m = MerchantInfoResponse{} }
func (m *MerchantInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantInfoResponse) ProtoMessage()               {}
func (*MerchantInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MerchantInfoResponse) GetMerchantName() string {
	if m != nil {
		return m.MerchantName
	}
	return ""
}

func (m *MerchantInfoResponse) GetMerchantAccount() *InnerMerchantAccount {
	if m != nil {
		return m.MerchantAccount
	}
	return nil
}

type MerchantSendCodeRequest struct {
	Cellphone string `protobuf:"bytes,1,opt,name=cellphone" json:"cellphone,omitempty"`
	Scene     uint32 `protobuf:"varint,2,opt,name=scene" json:"scene,omitempty"`
}

func (m *MerchantSendCodeRequest) Reset()                    { *m = MerchantSendCodeRequest{} }
func (m *MerchantSendCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantSendCodeRequest) ProtoMessage()               {}
func (*MerchantSendCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *MerchantSendCodeRequest) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *MerchantSendCodeRequest) GetScene() uint32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

type MerchantSendCodeResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantSendCodeResponse) Reset()                    { *m = MerchantSendCodeResponse{} }
func (m *MerchantSendCodeResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantSendCodeResponse) ProtoMessage()               {}
func (*MerchantSendCodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *MerchantSendCodeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantVerifyCodeRequest struct {
	Cellphone string `protobuf:"bytes,1,opt,name=cellphone" json:"cellphone,omitempty"`
	Scene     uint32 `protobuf:"varint,2,opt,name=scene" json:"scene,omitempty"`
	SmsCode   string `protobuf:"bytes,3,opt,name=smsCode" json:"smsCode,omitempty"`
}

func (m *MerchantVerifyCodeRequest) Reset()                    { *m = MerchantVerifyCodeRequest{} }
func (m *MerchantVerifyCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantVerifyCodeRequest) ProtoMessage()               {}
func (*MerchantVerifyCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *MerchantVerifyCodeRequest) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *MerchantVerifyCodeRequest) GetScene() uint32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

func (m *MerchantVerifyCodeRequest) GetSmsCode() string {
	if m != nil {
		return m.SmsCode
	}
	return ""
}

type MerchantVerifyCodeResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *MerchantVerifyCodeResponse) Reset()                    { *m = MerchantVerifyCodeResponse{} }
func (m *MerchantVerifyCodeResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantVerifyCodeResponse) ProtoMessage()               {}
func (*MerchantVerifyCodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *MerchantVerifyCodeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type MerchantAccountCellphoneUnquieReqeuest struct {
	Cellphone string `protobuf:"bytes,1,opt,name=cellphone" json:"cellphone,omitempty"`
	Role      uint32 `protobuf:"varint,2,opt,name=role" json:"role,omitempty"`
}

func (m *MerchantAccountCellphoneUnquieReqeuest) Reset() {
	*m = MerchantAccountCellphoneUnquieReqeuest{}
}
func (m *MerchantAccountCellphoneUnquieReqeuest) String() string { return proto.CompactTextString(m) }
func (*MerchantAccountCellphoneUnquieReqeuest) ProtoMessage()    {}
func (*MerchantAccountCellphoneUnquieReqeuest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{21}
}

func (m *MerchantAccountCellphoneUnquieReqeuest) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *MerchantAccountCellphoneUnquieReqeuest) GetRole() uint32 {
	if m != nil {
		return m.Role
	}
	return 0
}

type MerchantAccountCellphoneUnquieResponse struct {
	IsExisted bool `protobuf:"varint,1,opt,name=isExisted" json:"isExisted,omitempty"`
}

func (m *MerchantAccountCellphoneUnquieResponse) Reset() {
	*m = MerchantAccountCellphoneUnquieResponse{}
}
func (m *MerchantAccountCellphoneUnquieResponse) String() string { return proto.CompactTextString(m) }
func (*MerchantAccountCellphoneUnquieResponse) ProtoMessage()    {}
func (*MerchantAccountCellphoneUnquieResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22}
}

func (m *MerchantAccountCellphoneUnquieResponse) GetIsExisted() bool {
	if m != nil {
		return m.IsExisted
	}
	return false
}

func init() {
	proto.RegisterType((*MerchantWaiterCreateRequest)(nil), "Aphro.Merchant.pb.MerchantWaiterCreateRequest")
	proto.RegisterType((*MerchantWaiterCreateResponse)(nil), "Aphro.Merchant.pb.MerchantWaiterCreateResponse")
	proto.RegisterType((*MerchantWaiterDeleteRequest)(nil), "Aphro.Merchant.pb.MerchantWaiterDeleteRequest")
	proto.RegisterType((*MerchantWaiterDeleteResponse)(nil), "Aphro.Merchant.pb.MerchantWaiterDeleteResponse")
	proto.RegisterType((*MerchantRoomInfoRequest)(nil), "Aphro.Merchant.pb.MerchantRoomInfoRequest")
	proto.RegisterType((*MerchantRoomInfoResponse)(nil), "Aphro.Merchant.pb.MerchantRoomInfoResponse")
	proto.RegisterType((*MerchantOpenRequest)(nil), "Aphro.Merchant.pb.MerchantOpenRequest")
	proto.RegisterType((*MerchantOpenResponse)(nil), "Aphro.Merchant.pb.MerchantOpenResponse")
	proto.RegisterType((*MerchantRegisterRequest)(nil), "Aphro.Merchant.pb.MerchantRegisterRequest")
	proto.RegisterType((*MerchantRegisterResponse)(nil), "Aphro.Merchant.pb.MerchantRegisterResponse")
	proto.RegisterType((*MerchantChangePswRequest)(nil), "Aphro.Merchant.pb.MerchantChangePswRequest")
	proto.RegisterType((*MerchantChangePswResponse)(nil), "Aphro.Merchant.pb.MerchantChangePswResponse")
	proto.RegisterType((*MerchantLoginRequest)(nil), "Aphro.Merchant.pb.MerchantLoginRequest")
	proto.RegisterType((*MerchantLoginResponse)(nil), "Aphro.Merchant.pb.MerchantLoginResponse")
	proto.RegisterType((*MerchantInfoRequest)(nil), "Aphro.Merchant.pb.MerchantInfoRequest")
	proto.RegisterType((*InnerMerchantAccount)(nil), "Aphro.Merchant.pb.InnerMerchantAccount")
	proto.RegisterType((*MerchantInfoResponse)(nil), "Aphro.Merchant.pb.MerchantInfoResponse")
	proto.RegisterType((*MerchantSendCodeRequest)(nil), "Aphro.Merchant.pb.MerchantSendCodeRequest")
	proto.RegisterType((*MerchantSendCodeResponse)(nil), "Aphro.Merchant.pb.MerchantSendCodeResponse")
	proto.RegisterType((*MerchantVerifyCodeRequest)(nil), "Aphro.Merchant.pb.MerchantVerifyCodeRequest")
	proto.RegisterType((*MerchantVerifyCodeResponse)(nil), "Aphro.Merchant.pb.MerchantVerifyCodeResponse")
	proto.RegisterType((*MerchantAccountCellphoneUnquieReqeuest)(nil), "Aphro.Merchant.pb.MerchantAccountCellphoneUnquieReqeuest")
	proto.RegisterType((*MerchantAccountCellphoneUnquieResponse)(nil), "Aphro.Merchant.pb.MerchantAccountCellphoneUnquieResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MerchantService service

type MerchantServiceClient interface {
	// 商户开户
	MerchantOpen(ctx context.Context, in *MerchantOpenRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户用户注册
	MerchantRegister(ctx context.Context, in *MerchantRegisterRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户用户修改密码
	MerchantChangePsw(ctx context.Context, in *MerchantChangePswRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户app登陆
	MerchantLogin(ctx context.Context, in *MerchantLoginRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户下的手机号是否唯一
	MerchantAccountCellphoneUnquie(ctx context.Context, in *MerchantAccountCellphoneUnquieReqeuest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户app 信息
	MerchantInfo(ctx context.Context, in *MerchantInfoRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 商户app 信息
	MerchantRoomInfo(ctx context.Context, in *MerchantRoomInfoRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 新增商户服务信息
	MerchantWaiterCreate(ctx context.Context, in *MerchantWaiterCreateRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 删除商户服务信息
	MerchantWaiterDelete(ctx context.Context, in *MerchantWaiterDeleteRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 短信验证码 验证接口
	MerchantVerifyCode(ctx context.Context, in *MerchantVerifyCodeRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
	// 短信验证码 发送接口
	MerchantSendCode(ctx context.Context, in *MerchantSendCodeRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error)
}

type merchantServiceClient struct {
	cc *grpc.ClientConn
}

func NewMerchantServiceClient(cc *grpc.ClientConn) MerchantServiceClient {
	return &merchantServiceClient{cc}
}

func (c *merchantServiceClient) MerchantOpen(ctx context.Context, in *MerchantOpenRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantOpen", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantRegister(ctx context.Context, in *MerchantRegisterRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantRegister", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantChangePsw(ctx context.Context, in *MerchantChangePswRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantChangePsw", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantLogin(ctx context.Context, in *MerchantLoginRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantAccountCellphoneUnquie(ctx context.Context, in *MerchantAccountCellphoneUnquieReqeuest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantAccountCellphoneUnquie", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantInfo(ctx context.Context, in *MerchantInfoRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantRoomInfo(ctx context.Context, in *MerchantRoomInfoRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantRoomInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantWaiterCreate(ctx context.Context, in *MerchantWaiterCreateRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantWaiterCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantWaiterDelete(ctx context.Context, in *MerchantWaiterDeleteRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantWaiterDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantVerifyCode(ctx context.Context, in *MerchantVerifyCodeRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantVerifyCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) MerchantSendCode(ctx context.Context, in *MerchantSendCodeRequest, opts ...grpc.CallOption) (*Aphro_CommonBiz.Response, error) {
	out := new(Aphro_CommonBiz.Response)
	err := grpc.Invoke(ctx, "/Aphro.Merchant.pb.MerchantService/merchantSendCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MerchantService service

type MerchantServiceServer interface {
	// 商户开户
	MerchantOpen(context.Context, *MerchantOpenRequest) (*Aphro_CommonBiz.Response, error)
	// 商户用户注册
	MerchantRegister(context.Context, *MerchantRegisterRequest) (*Aphro_CommonBiz.Response, error)
	// 商户用户修改密码
	MerchantChangePsw(context.Context, *MerchantChangePswRequest) (*Aphro_CommonBiz.Response, error)
	// 商户app登陆
	MerchantLogin(context.Context, *MerchantLoginRequest) (*Aphro_CommonBiz.Response, error)
	// 商户下的手机号是否唯一
	MerchantAccountCellphoneUnquie(context.Context, *MerchantAccountCellphoneUnquieReqeuest) (*Aphro_CommonBiz.Response, error)
	// 商户app 信息
	MerchantInfo(context.Context, *MerchantInfoRequest) (*Aphro_CommonBiz.Response, error)
	// 商户app 信息
	MerchantRoomInfo(context.Context, *MerchantRoomInfoRequest) (*Aphro_CommonBiz.Response, error)
	// 新增商户服务信息
	MerchantWaiterCreate(context.Context, *MerchantWaiterCreateRequest) (*Aphro_CommonBiz.Response, error)
	// 删除商户服务信息
	MerchantWaiterDelete(context.Context, *MerchantWaiterDeleteRequest) (*Aphro_CommonBiz.Response, error)
	// 短信验证码 验证接口
	MerchantVerifyCode(context.Context, *MerchantVerifyCodeRequest) (*Aphro_CommonBiz.Response, error)
	// 短信验证码 发送接口
	MerchantSendCode(context.Context, *MerchantSendCodeRequest) (*Aphro_CommonBiz.Response, error)
}

func RegisterMerchantServiceServer(s *grpc.Server, srv MerchantServiceServer) {
	s.RegisterService(&_MerchantService_serviceDesc, srv)
}

func _MerchantService_MerchantOpen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantOpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantOpen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantOpen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantOpen(ctx, req.(*MerchantOpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantRegister(ctx, req.(*MerchantRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantChangePsw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantChangePswRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantChangePsw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantChangePsw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantChangePsw(ctx, req.(*MerchantChangePswRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantLogin(ctx, req.(*MerchantLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantAccountCellphoneUnquie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantAccountCellphoneUnquieReqeuest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantAccountCellphoneUnquie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantAccountCellphoneUnquie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantAccountCellphoneUnquie(ctx, req.(*MerchantAccountCellphoneUnquieReqeuest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantInfo(ctx, req.(*MerchantInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantRoomInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantRoomInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantRoomInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantRoomInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantRoomInfo(ctx, req.(*MerchantRoomInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantWaiterCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantWaiterCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantWaiterCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantWaiterCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantWaiterCreate(ctx, req.(*MerchantWaiterCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantWaiterDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantWaiterDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantWaiterDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantWaiterDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantWaiterDelete(ctx, req.(*MerchantWaiterDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantVerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantVerifyCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantVerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantVerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantVerifyCode(ctx, req.(*MerchantVerifyCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_MerchantSendCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantSendCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).MerchantSendCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aphro.Merchant.pb.MerchantService/MerchantSendCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).MerchantSendCode(ctx, req.(*MerchantSendCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MerchantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Aphro.Merchant.pb.MerchantService",
	HandlerType: (*MerchantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "merchantOpen",
			Handler:    _MerchantService_MerchantOpen_Handler,
		},
		{
			MethodName: "merchantRegister",
			Handler:    _MerchantService_MerchantRegister_Handler,
		},
		{
			MethodName: "merchantChangePsw",
			Handler:    _MerchantService_MerchantChangePsw_Handler,
		},
		{
			MethodName: "merchantLogin",
			Handler:    _MerchantService_MerchantLogin_Handler,
		},
		{
			MethodName: "merchantAccountCellphoneUnquie",
			Handler:    _MerchantService_MerchantAccountCellphoneUnquie_Handler,
		},
		{
			MethodName: "merchantInfo",
			Handler:    _MerchantService_MerchantInfo_Handler,
		},
		{
			MethodName: "merchantRoomInfo",
			Handler:    _MerchantService_MerchantRoomInfo_Handler,
		},
		{
			MethodName: "merchantWaiterCreate",
			Handler:    _MerchantService_MerchantWaiterCreate_Handler,
		},
		{
			MethodName: "merchantWaiterDelete",
			Handler:    _MerchantService_MerchantWaiterDelete_Handler,
		},
		{
			MethodName: "merchantVerifyCode",
			Handler:    _MerchantService_MerchantVerifyCode_Handler,
		},
		{
			MethodName: "merchantSendCode",
			Handler:    _MerchantService_MerchantSendCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "merchant.proto",
}

func init() { proto.RegisterFile("merchant.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1002 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x97, 0xdf, 0x6e, 0x1c, 0x35,
	0x14, 0xc6, 0x35, 0x9b, 0x3f, 0x34, 0xa6, 0x69, 0x5a, 0x67, 0x21, 0x9b, 0x65, 0x49, 0x91, 0x25,
	0x5a, 0x14, 0xd0, 0x4e, 0x5b, 0x0a, 0x82, 0x5e, 0x20, 0x25, 0x5b, 0x90, 0x22, 0x28, 0x2d, 0x03,
	0x01, 0x89, 0xbb, 0xc9, 0xec, 0xc9, 0xae, 0xd5, 0x1d, 0x7b, 0x62, 0xcf, 0xa6, 0x4d, 0x2b, 0x90,
	0x40, 0xe2, 0x92, 0xab, 0x5e, 0xf3, 0x54, 0xbc, 0x02, 0x6f, 0xc1, 0x0d, 0xb2, 0x67, 0xbc, 0xf6,
	0xcc, 0x0e, 0xde, 0x6d, 0x7b, 0x37, 0xf6, 0xce, 0x39, 0xdf, 0xef, 0xd8, 0x9f, 0xcf, 0x78, 0xd1,
	0x95, 0x14, 0x44, 0x32, 0x8e, 0x59, 0xde, 0xcf, 0x04, 0xcf, 0x39, 0xbe, 0x76, 0x90, 0x8d, 0x05,
	0xef, 0x3f, 0x98, 0xcd, 0x9e, 0x74, 0x7b, 0x23, 0xce, 0x47, 0x13, 0x08, 0xe3, 0x8c, 0x86, 0x31,
	0x63, 0x3c, 0x8f, 0x73, 0xca, 0x99, 0x2c, 0x02, 0xba, 0x07, 0x23, 0x9a, 0x8f, 0xa7, 0x27, 0xfd,
	0x84, 0xa7, 0xe1, 0x24, 0x4e, 0xb3, 0x58, 0x0c, 0x6f, 0xdf, 0xba, 0x7d, 0x37, 0x8c, 0x55, 0x9e,
	0x70, 0xc0, 0xd3, 0x94, 0xb3, 0x43, 0xfa, 0x2c, 0x8c, 0x40, 0x66, 0x9c, 0x49, 0x08, 0x1f, 0x1d,
	0x86, 0xa2, 0x7c, 0x2e, 0x52, 0x90, 0xdf, 0x02, 0xf4, 0x8e, 0x11, 0xfc, 0x29, 0xa6, 0x39, 0x88,
	0x81, 0x80, 0x38, 0x87, 0x08, 0xce, 0xa6, 0x20, 0x73, 0xdc, 0x46, 0x6b, 0x39, 0x7f, 0x0c, 0xac,
	0x13, 0xbc, 0x17, 0x7c, 0xb0, 0x11, 0x15, 0x03, 0xbc, 0x87, 0x90, 0x61, 0x3f, 0xba, 0xdf, 0x69,
	0xe9, 0x9f, 0x9c, 0x19, 0x8c, 0xd1, 0x2a, 0x8b, 0x53, 0xe8, 0xac, 0xe8, 0x5f, 0xf4, 0x33, 0xee,
	0xa0, 0x37, 0x04, 0x48, 0x10, 0xe7, 0xd0, 0x59, 0xd5, 0xd3, 0x66, 0x48, 0x3e, 0x43, 0xbd, 0x66,
	0x84, 0x82, 0x54, 0x45, 0xca, 0x69, 0x92, 0x80, 0x94, 0x9a, 0xe2, 0x52, 0x64, 0x86, 0xe4, 0x61,
	0x1d, 0xfe, 0x3e, 0x4c, 0x60, 0x11, 0x7c, 0x17, 0x5d, 0x7a, 0xa2, 0x5f, 0xa6, 0x43, 0x8d, 0xbe,
	0x1a, 0xcd, 0xc6, 0xf3, 0x28, 0x26, 0xe1, 0x42, 0x94, 0x63, 0xb4, 0x63, 0x22, 0x23, 0xce, 0xd3,
	0x23, 0x76, 0xca, 0x0d, 0x06, 0x41, 0x97, 0x25, 0x48, 0x49, 0x39, 0xfb, 0xc1, 0xa1, 0xa9, 0xcc,
	0xe1, 0xb7, 0xd1, 0xba, 0x50, 0x61, 0xc5, 0x6a, 0x6e, 0x46, 0xe5, 0x88, 0xdc, 0x45, 0x9d, 0xf9,
	0xb4, 0x16, 0x46, 0xc0, 0x39, 0x08, 0x09, 0x65, 0x4a, 0x33, 0x54, 0xbb, 0xba, 0x6d, 0xc2, 0x1e,
	0x66, 0xc0, 0x0c, 0x89, 0xd9, 0x97, 0xc0, 0xd9, 0x97, 0x1e, 0xda, 0x48, 0x60, 0x32, 0xc9, 0xc6,
	0x9c, 0x41, 0xb9, 0x95, 0x76, 0x42, 0x69, 0xc4, 0xc3, 0xa1, 0x50, 0x05, 0x17, 0x9b, 0x69, 0x86,
	0xca, 0x03, 0x59, 0x7c, 0x91, 0x02, 0xcb, 0x0f, 0x69, 0xae, 0xb7, 0x74, 0x33, 0x72, 0x66, 0xc8,
	0x2d, 0xd4, 0xae, 0x22, 0x2c, 0x5c, 0xc2, 0x17, 0x81, 0xb3, 0x86, 0x30, 0xa2, 0x32, 0x07, 0x61,
	0xc8, 0xaf, 0xa2, 0x95, 0xc7, 0x70, 0x51, 0x82, 0xab, 0xc7, 0x59, 0x2d, 0x2d, 0xa7, 0x96, 0x3d,
	0x84, 0xce, 0x41, 0xd0, 0xd3, 0x8b, 0x01, 0x1f, 0x1a, 0xf7, 0x39, 0x33, 0x2a, 0x46, 0xf0, 0x09,
	0x74, 0xd6, 0x34, 0xad, 0x7e, 0xae, 0x79, 0x79, 0xbd, 0xa8, 0xc3, 0xce, 0x54, 0x76, 0x60, 0x06,
	0xb5, 0xb0, 0x96, 0xcc, 0x46, 0x0d, 0xc6, 0x31, 0x1b, 0xc1, 0x23, 0xf9, 0xe4, 0xff, 0x6b, 0xa9,
	0x3b, 0xa4, 0xd5, 0xe0, 0x90, 0x05, 0xb5, 0x91, 0x4f, 0xd0, 0x6e, 0x83, 0xe2, 0x12, 0xa0, 0xb3,
	0x6d, 0xfa, 0x86, 0x8f, 0x28, 0xf3, 0x42, 0xea, 0x03, 0x54, 0xbe, 0x61, 0x20, 0xdd, 0xb9, 0xb9,
	0x42, 0x56, 0xe6, 0x0b, 0x21, 0xc7, 0xe8, 0xad, 0x9a, 0x62, 0x09, 0xb9, 0xcc, 0x39, 0x71, 0x0a,
	0x69, 0x55, 0x0b, 0xf9, 0xda, 0x5a, 0xde, 0x3d, 0x7c, 0xaf, 0xd4, 0xc0, 0xc8, 0x17, 0xa8, 0x7d,
	0xc4, 0x18, 0x08, 0x93, 0xf1, 0x20, 0x49, 0xf8, 0x94, 0xe5, 0x33, 0x03, 0x05, 0x8e, 0x81, 0x1a,
	0x8c, 0x48, 0xfe, 0x0c, 0xec, 0xb2, 0x56, 0xce, 0x2c, 0x41, 0x97, 0x8d, 0xcc, 0xb7, 0xf6, 0x24,
	0x56, 0xe6, 0xf0, 0x77, 0x68, 0x2b, 0xad, 0xea, 0xea, 0xdc, 0x6f, 0xde, 0xb9, 0xd9, 0x9f, 0xfb,
	0x42, 0xf4, 0x9b, 0x30, 0xa3, 0x7a, 0x3c, 0x79, 0x60, 0x4f, 0xd6, 0xf7, 0xc0, 0x86, 0xca, 0x30,
	0x66, 0x81, 0x2a, 0xe7, 0x3f, 0xa8, 0x9f, 0xff, 0x36, 0x5a, 0x93, 0x09, 0x94, 0x9d, 0x61, 0x33,
	0x2a, 0x06, 0xee, 0x99, 0xb0, 0xe9, 0x16, 0x5a, 0x8d, 0x5a, 0x87, 0xfe, 0x38, 0xf3, 0xed, 0x6b,
	0x60, 0x68, 0xa9, 0x54, 0x3a, 0xe7, 0xc1, 0x0c, 0xc9, 0xa7, 0xa8, 0xdb, 0x24, 0xb5, 0x10, 0xf1,
	0x67, 0x74, 0xa3, 0xb6, 0x96, 0x03, 0xc3, 0x70, 0xcc, 0xce, 0xa6, 0x54, 0xe1, 0xc2, 0x12, 0xbc,
	0xc6, 0x27, 0x2d, 0xeb, 0x13, 0xf2, 0xd5, 0xe2, 0xdc, 0x25, 0x5f, 0x0f, 0x6d, 0x50, 0xf9, 0xe5,
	0x53, 0xd5, 0x6b, 0x86, 0x25, 0xa1, 0x9d, 0xb8, 0xf3, 0x2f, 0x42, 0x5b, 0x76, 0xf5, 0xc5, 0x39,
	0x4d, 0x00, 0x4f, 0xac, 0xad, 0x54, 0xb3, 0xc5, 0x37, 0x1a, 0x9c, 0xd2, 0xf0, 0x41, 0xe8, 0xee,
	0x96, 0xef, 0xcd, 0xee, 0x0a, 0x7d, 0x03, 0x41, 0x76, 0x7f, 0xff, 0xfb, 0x9f, 0x17, 0xad, 0x6d,
	0x72, 0x25, 0x34, 0x99, 0x43, 0x9e, 0x01, 0xbb, 0x17, 0xec, 0xe3, 0xa7, 0xe8, 0x6a, 0x5a, 0x6b,
	0x89, 0x78, 0xdf, 0xa3, 0x58, 0x6b, 0xe6, 0x3e, 0xd5, 0x77, 0xb5, 0xea, 0x0e, 0xc1, 0x56, 0x55,
	0x94, 0xd1, 0x4a, 0xf9, 0x39, 0xba, 0x96, 0xd6, 0x9b, 0x1c, 0xfe, 0xd0, 0x23, 0x5d, 0x6f, 0xbe,
	0x3e, 0xed, 0x3d, 0xad, 0xdd, 0x21, 0xdb, 0x56, 0x3b, 0x31, 0xe1, 0x4a, 0x9c, 0xa3, 0xcd, 0xd4,
	0x6d, 0x5c, 0xf8, 0xa6, 0x47, 0xd8, 0x6d, 0xa6, 0x3e, 0xd1, 0xae, 0x16, 0x6d, 0x93, 0x2d, 0x2b,
	0x3a, 0x51, 0xa1, 0x4a, 0xf0, 0xaf, 0x00, 0xed, 0xa5, 0x5e, 0xcb, 0xe0, 0xcf, 0x3d, 0x08, 0x7e,
	0x07, 0xfb, 0xa0, 0xde, 0xd7, 0x50, 0xd7, 0x49, 0xd7, 0x42, 0xc5, 0x45, 0xb2, 0x90, 0xca, 0x63,
	0x46, 0xcf, 0xa6, 0xa0, 0xf8, 0x1c, 0xd7, 0xa9, 0x26, 0xe7, 0x75, 0x9d, 0xd3, 0x93, 0x5f, 0xd2,
	0x75, 0x94, 0x9d, 0x72, 0xa5, 0xf6, 0xcc, 0x71, 0x5d, 0x79, 0x15, 0xf2, 0xbb, 0xae, 0x7a, 0x0d,
	0xf3, 0xa9, 0x5e, 0xd7, 0xaa, 0xbb, 0x78, 0xc7, 0x71, 0x1d, 0xe7, 0x69, 0xf8, 0xbc, 0xb8, 0x85,
	0xfd, 0x82, 0xff, 0x08, 0x50, 0x3b, 0x6d, 0xb8, 0xa3, 0xe2, 0xbe, 0x07, 0xa0, 0xe1, 0x3e, 0xed,
	0x83, 0x20, 0x1a, 0xa2, 0x47, 0x1c, 0x88, 0xe2, 0x5e, 0x1a, 0x26, 0x3a, 0x85, 0x5a, 0x83, 0x79,
	0x8e, 0xe2, 0x82, 0xba, 0x04, 0x47, 0xe5, 0x6a, 0xfc, 0x6a, 0x1c, 0x43, 0x9d, 0x42, 0x71, 0xfc,
	0x8a, 0x70, 0x3a, 0xd7, 0x5f, 0xf1, 0x47, 0x1e, 0x88, 0xb9, 0x8e, 0xbf, 0xc4, 0x7e, 0x90, 0xb6,
	0x45, 0xb0, 0x37, 0x9d, 0x5a, 0x07, 0x32, 0x1f, 0x20, 0xaf, 0x17, 0x6a, 0x1f, 0xbd, 0x97, 0xec,
	0x40, 0xb2, 0x8c, 0xbe, 0x17, 0xec, 0x9f, 0xac, 0xeb, 0xff, 0x4d, 0x1f, 0xff, 0x17, 0x00, 0x00,
	0xff, 0xff, 0xa9, 0xd8, 0x59, 0x3e, 0xbd, 0x0d, 0x00, 0x00,
}
